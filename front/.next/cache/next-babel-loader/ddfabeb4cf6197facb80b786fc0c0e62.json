{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { KAKAO_LOG_IN_FAILURE, KAKAO_LOG_IN_REQUEST, KAKAO_LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction kakaologInAPI(data) {\n  return axios.get('/user/kakao');\n}\n\nfunction kakaologInAPI2(data) {\n  return axios.get('/user/kakao2');\n}\n\nfunction* kakaologIn(action) {\n  try {\n    yield call(kakaologInAPI);\n    console.log('dd');\n    const result = yield call(kakaologInAPI2);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  console.log(\"dd\");\n\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchKaKaoLogIn() {\n  yield takeLatest(KAKAO_LOG_IN_REQUEST, kakaologIn);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchKaKaoLogIn), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/sagas/user.js"],"names":["all","delay","fork","put","takeLatest","call","axios","KAKAO_LOG_IN_FAILURE","KAKAO_LOG_IN_REQUEST","KAKAO_LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","kakaologInAPI","data","get","kakaologInAPI2","kakaologIn","action","console","log","result","type","err","error","response","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","watchKaKaoLogIn","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  KAKAO_LOG_IN_FAILURE,\n  KAKAO_LOG_IN_REQUEST,\n  KAKAO_LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n} from '../reducers/user';\n\nfunction kakaologInAPI(data) {\n  return axios.get('/user/kakao');\n}\n\nfunction kakaologInAPI2(data) {\n  return axios.get('/user/kakao2');\n}\n\nfunction* kakaologIn(action) {\n  try {\n    yield call(kakaologInAPI);\n    console.log('dd');\n    const result = yield call(kakaologInAPI2)\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI,action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup',data);\n}\n\nfunction* signUp(action) {\n    console.log(\"dd\");\n  try {\n    const result = yield call(signUpAPI,action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchKaKaoLogIn() {\n  yield takeLatest(KAKAO_LOG_IN_REQUEST, kakaologIn);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchKaKaoLogIn),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}