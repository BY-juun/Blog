{"ast":null,"code":"import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/changeNickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.get('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  console.log(\"dd\");\n\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchSignUp), fork(watchLogIn), fork(watchLogOut), fork(watchChangeNickname)]);\n}","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","axios","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","changeNicknameAPI","data","patch","nickname","changeNickname","action","result","type","err","console","error","response","logInAPI","post","logIn","logOutAPI","get","logOut","signUpAPI","signUp","log","loadUserAPI","loadUser","watchLogIn","watchLogOut","watchSignUp","watchLoadUser","watchChangeNickname","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n} from '../reducers/user';\n\n\n\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/changeNickname',{nickname : data});\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI,action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI,action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.get('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup',data);\n}\n\nfunction* signUp(action) {\n    console.log(\"dd\");\n  try {\n    const result = yield call(signUpAPI,action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadUser);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLoadUser),\n    fork(watchSignUp),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchChangeNickname),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}