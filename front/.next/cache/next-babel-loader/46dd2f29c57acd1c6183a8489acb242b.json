{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { SmileTwoTone } from '@ant-design/icons';\n\nconst Home = () => {\n  const {\n    Posts\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, Posts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\",\n      fontSize: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(SmileTwoTone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 84\n    }\n  }), \" \\uBC29\\uBB38\\uD574\\uC8FC\\uC154\\uC11C \\uAC10\\uC0AC\\uD569\\uB2C8\\uB2E4 \", __jsx(SmileTwoTone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 113\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/index.js"],"names":["React","AppLayout","useSelector","PostCard","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","wrapper","END","axios","SmileTwoTone","Home","Posts","state","post","map","id","textAlign","marginTop","fontSize","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA4B,mBAA5B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAYT,WAAW,CAAEU,KAAD,IAAYA,KAAK,CAACC,IAAnB,CAA7B;AACA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAWD,IAAD,IAAU,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACE,EAApB;AAAwB,IAAA,IAAI,EAAEF,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CADH,EAEE;AAAK,IAAA,KAAK,EAAI;AAACG,MAAAA,SAAS,EAAG,QAAb;AAAuBC,MAAAA,SAAS,EAAG,MAAnC;AAA2CC,MAAAA,QAAQ,EAAG;AAAtD,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6E,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7E,2EAA0G,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1G,CAFF,CADF;AAMD,CARD;;AAUA,OAAO,MAAMC,kBAAkB,GAAGb,OAAO,CAACa,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E;AACA,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAb,EAAAA,KAAK,CAACgB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBb,IAAAA,KAAK,CAACgB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAExB;AADe,GAAvB;AAGAgB,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEvB;AADe,GAAvB;AAGAe,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBpB,GAAvB;AACA,QAAMa,OAAO,CAACM,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAfiC,CAA3B;AAiBP,eAAepB,IAAf","sourcesContent":["import React from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector} from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user'\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport { SmileTwoTone} from '@ant-design/icons';\n\nconst Home = () => {\n  const { Posts } = useSelector((state) => (state.post));\n  return (\n    <AppLayout>\n      {Posts.map((post) => <PostCard key={post.id} post={post}  />)}\n      <div style = {{textAlign : \"center\", marginTop : \"20px\", fontSize : \"25px\"}}><SmileTwoTone/> 방문해주셔서 감사합니다 <SmileTwoTone/></div>\n    </AppLayout>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  })\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}