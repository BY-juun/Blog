{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/pages/post/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { LOAD_CURPOST_REQUEST } from \"../../reducers/post\";\nimport ReactHtmlParser from 'html-react-parser'; //More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nconst Post = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    currentPost\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    console.log(id);\n\n    if (id) {\n      dispatch({\n        type: LOAD_CURPOST_REQUEST,\n        data: id\n      });\n    }\n  }, [id]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, currentPost && currentPost.id), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, currentPost && currentPost.category), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, currentPost && currentPost.hashTag), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, currentPost && ReactHtmlParser(currentPost.content)));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/post/[id].js"],"names":["AppLayout","useRouter","useDispatch","useSelector","useEffect","LOAD_CURPOST_REQUEST","ReactHtmlParser","Post","dispatch","router","id","query","currentPost","state","post","console","log","type","data","category","hashTag","content"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;AACA;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAnC;AAEAV,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;;AACA,QAAGA,EAAH,EAAM;AACFF,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAGZ,oBADF;AAELa,QAAAA,IAAI,EAAGR;AAFF,OAAD,CAAR;AAIH;AAEJ,GATQ,EASP,CAACA,EAAD,CATO,CAAT;AAWA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,WAAW,IAAIA,WAAW,CAACF,EAAhC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,WAAW,IAAGA,WAAW,CAACO,QAA/B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,WAAW,IAAGA,WAAW,CAACQ,OAA/B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,WAAW,IAAGN,eAAe,CAACM,WAAW,CAACS,OAAb,CAAnC,CAJJ,CADJ;AAQH,CAzBD;;AA2BA,eAAed,IAAf","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { LOAD_CURPOST_REQUEST } from \"../../reducers/post\";\nimport ReactHtmlParser from 'html-react-parser'\n\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\nconst Post = () => {\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const { id } = router.query;\n    const { currentPost } = useSelector((state) => state.post);\n    \n    useEffect(()=>{\n        console.log(id);\n        if(id){\n            dispatch({\n                type : LOAD_CURPOST_REQUEST,\n                data : id,\n            })\n        }\n        \n    },[id])\n\n    return (\n        <AppLayout>\n            <h1>{currentPost && currentPost.id}</h1>\n            <h1>{currentPost &&currentPost.category}</h1>\n            <h1>{currentPost &&currentPost.hashTag}</h1>\n            <div>{currentPost &&ReactHtmlParser(currentPost.content)}</div>\n        </AppLayout>\n    )\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}