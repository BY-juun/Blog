{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/components/WritePostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport useInput from '../hooks/useInput';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Button, Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\nimport Router from 'next/router';\nconst CKEditor = dynamic(() => import('@ckeditor/ckeditor5-react'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('@ckeditor/ckeditor5-react')],\n    modules: ['@ckeditor/ckeditor5-react']\n  }\n});\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport ImageResize from '@ckeditor/ckeditor5-image/src/imageresize';\nexport const Global = createGlobalStyle([\".ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margintop:15px;}.ck.ck-editor{margin-top:15px;}.ck-content{height:500px;}\"]);\nconst LoginButton = styled(Button).withConfig({\n  displayName: \"WritePostForm__LoginButton\",\n  componentId: \"sc-1o1we0s-0\"\n})([\"margin-right:10px;\"]);\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"WritePostForm__ButtonWrapper\",\n  componentId: \"sc-1o1we0s-1\"\n})([\"margin-top:10px;\"]);\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"WritePostForm__FormWrapper\",\n  componentId: \"sc-1o1we0s-2\"\n})([\"padding:10px;\"]);\n\nconst WritePostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    addPostLoading,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [title, onChangeTitle] = useInput('');\n  const {\n    0: category,\n    1: setCategory\n  } = useState('');\n  const [content, onChangeContent, setContent] = useInput('');\n  const [hashTag, onChangeHashtag] = useInput('');\n  const {\n    TextArea\n  } = Input;\n  const {\n    0: isLayoutReady,\n    1: setIsLayoutReady\n  } = useState(false);\n  useEffect(() => {\n    setIsLayoutReady(true);\n  }, []);\n  const onSubmitForm = useCallback(() => {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        title,\n        category,\n        hashTag,\n        content\n      }\n    });\n    setTimeout(() => {\n      //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n      Router.push('/');\n    }, 1000);\n  }, [title, category, hashTag, content]);\n  const handleTeacherChange = useCallback(value => {\n    setCategory(value);\n  }, [category]);\n\n  const onChangeCKEditor = (event, editor) => {\n    const data = editor.getData();\n    setContent(data);\n  };\n\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"\\uC81C\\uBAA9\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), __jsx(TextArea, {\n    value: title,\n    onChange: onChangeTitle,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"belong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    onChange: handleTeacherChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(Select.Option, {\n    value: \"JavaScript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"JavaScript\"), __jsx(Select.Option, {\n    value: \"React\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"React\"), __jsx(Select.Option, {\n    value: \"TypeScript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"TypeScript\"), __jsx(Select.Option, {\n    value: \"OperatingSystem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"OperatingSystem\"), __jsx(Select.Option, {\n    value: \"DataBase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Database\"), __jsx(Select.Option, {\n    value: \"Browser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Browser\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"hashtag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"\\uD574\\uC2DC\\uD0DC\\uADF8\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), __jsx(TextArea, {\n    value: hashTag,\n    onChange: onChangeHashtag,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"\\uB0B4\\uC6A9\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), isLayoutReady && __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p></p>\",\n    onChange: onChangeCKEditor,\n    config: {\n      plugins: [ImageResize],\n      image: {\n        resizeUnit: 'px',\n        toolbar: ['imageStyle:alignLeft', 'imageStyle:full', 'imageStyle:alignRight', '|', 'imageTextAlternative'],\n        styles: ['full', 'alignLeft', 'alignRight']\n      },\n      ckfinder: {\n        uploadUrl: \"http://localhost:3085/uploads\"\n      }\n    },\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 35\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(LoginButton, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addPostLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"\\uB4F1\\uB85D\")));\n};\n\nexport default WritePostForm;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/WritePostForm.js"],"names":["React","useCallback","useEffect","useState","dynamic","useInput","styled","createGlobalStyle","Button","Form","Input","Select","useDispatch","useSelector","ADD_POST_REQUEST","Router","CKEditor","ssr","ClassicEditor","ImageResize","Global","LoginButton","ButtonWrapper","div","FormWrapper","WritePostForm","dispatch","addPostLoading","addPostDone","state","post","title","onChangeTitle","category","setCategory","content","onChangeContent","setContent","hashTag","onChangeHashtag","TextArea","isLayoutReady","setIsLayoutReady","onSubmitForm","type","data","setTimeout","push","handleTeacherChange","value","onChangeCKEditor","event","editor","getData","width","plugins","image","resizeUnit","toolbar","styles","ckfinder","uploadUrl","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport dynamic from 'next/dynamic'\nimport useInput from '../hooks/useInput';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Button, Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\nimport Router from 'next/router'\nconst CKEditor = dynamic(() => import('@ckeditor/ckeditor5-react'), {\n    ssr: false\n  });\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport ImageResize from '@ckeditor/ckeditor5-image/src/imageresize'\nexport const Global = createGlobalStyle`\n    .ck.ck-reset, .ck.ck-reset_all, .ck.ck-reset_all *{\n        margintop : 15px;\n    }\n    .ck.ck-editor {\n        margin-top : 15px;\n    }\n\n    .ck-content { \n        height : 500px;\n    }\n`;\n\nconst LoginButton = styled(Button)`\nmargin-right : 10px;\n`;\n\nconst ButtonWrapper = styled.div`\nmargin-top : 10px;\n`\nconst FormWrapper = styled(Form)`\npadding : 10px;\n`;\n\n\n\nconst WritePostForm = () => {\n    const dispatch = useDispatch();\n    const { addPostLoading, addPostDone } = useSelector((state) => state.post);\n    const [title, onChangeTitle] = useInput('');\n    const [category, setCategory] = useState('');\n    const [content, onChangeContent, setContent] = useInput('');\n    const [hashTag, onChangeHashtag] = useInput('');\n    const { TextArea } = Input;\n\n    const [isLayoutReady, setIsLayoutReady] = useState(false)\n\n    useEffect(() => {\n      setIsLayoutReady(true)\n    }, [])\n\n    const onSubmitForm = useCallback(() => {\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                title, category, hashTag, content,\n            }\n        })\n        setTimeout(() => { //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n            Router.push('/');\n        }, 1000);\n    }, [title, category, hashTag, content]);\n\n    const handleTeacherChange = useCallback((value) => {\n        setCategory(value);\n    }, [category])\n    const onChangeCKEditor = (event, editor) => {\n        const data = editor.getData();\n        setContent(data);\n    }\n\n    return (\n\n        <FormWrapper onFinish={onSubmitForm}>\n            <Global />\n            <div>\n                <label htmlFor='title'>제목</label>\n                <br />\n                <TextArea value={title} onChange={onChangeTitle} style={{ width: \"100%\" }} />\n            </div>\n            <div>\n                <label htmlFor='belong'>카테고리</label>\n                <br />\n                <Select style={{ width: \"100%\" }} onChange={handleTeacherChange}>\n                    <Select.Option value=\"JavaScript\">JavaScript</Select.Option>\n                    <Select.Option value=\"React\">React</Select.Option>\n                    <Select.Option value=\"TypeScript\">TypeScript</Select.Option>\n                    <Select.Option value=\"OperatingSystem\">OperatingSystem</Select.Option>\n                    <Select.Option value=\"DataBase\">Database</Select.Option>\n                    <Select.Option value=\"Browser\">Browser</Select.Option>\n                </Select>\n            </div>\n            <div>\n                <label htmlFor='hashtag'>해시태그</label>\n                <br />\n                <TextArea value={hashTag} onChange={onChangeHashtag} style={{ width: \"100%\" }} />\n            </div>\n            <div>\n                <label htmlFor='content'>내용</label>\n                <br />\n                {isLayoutReady && <CKEditor editor={ClassicEditor}\n                    data=\"<p></p>\"\n                    onChange={onChangeCKEditor}\n                    config = {\n                        {   \n                            plugins : [ImageResize],\n                            image: {\n                                resizeUnit: 'px',\n                                toolbar: [\n                                  'imageStyle:alignLeft',\n                                  'imageStyle:full',\n                                  'imageStyle:alignRight',\n                                  '|',\n                                  'imageTextAlternative'\n                                ],\n                                styles: ['full', 'alignLeft', 'alignRight']\n                              },\n                            ckfinder : {\n                                uploadUrl : \"http://localhost:3085/uploads\"\n                            },\n                        }\n                    }\n                    \n                    style={{ marginTop: \"10px\" }}>     \n                </CKEditor> }\n            </div>\n            <ButtonWrapper>\n                <LoginButton type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={addPostLoading}>등록</LoginButton>\n            </ButtonWrapper>\n\n        </FormWrapper>\n\n    );\n}\n\nexport default WritePostForm;"]},"metadata":{},"sourceType":"module"}