{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var postId = _ref.postId;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      comment = _useInput2[0],\n      onChangeComment = _useInput2[1],\n      setComment = _useInput2[2];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var dispatch = useDispatch();\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: postId,\n        comment: comment\n      }\n    });\n  }, [comment]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    style: {\n      display: \"flex\",\n      paddingTop: \"15px\",\n      height: \"100px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    name: \"user-comment\",\n    type: \"text\",\n    value: comment,\n    onChange: onChangeComment,\n    style: {\n      marginRight: \"20px\",\n      marginLeft: \"15px\"\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    style: {\n      marginRight: \"15px\",\n      marginTop: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"\\uC785\\uB825\"));\n};\n\n_s(CommentForm, \"cMoMpHdm0laBU4dj6IFZ6bqu5EI=\", false, function () {\n  return [useInput, useSelector, useDispatch];\n});\n\n_c = CommentForm;\nCommentForm.prototype = {\n  postId: PropTypes.number.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/CommentForm.js"],"names":["PropTypes","Form","Input","Button","Link","useCallback","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","postId","comment","onChangeComment","setComment","state","post","addCommentLoading","dispatch","onSubmitComment","type","data","display","paddingTop","height","marginRight","marginLeft","marginTop","prototype","number","isRequired"],"mappings":";;;;;;;;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAEhC,kBAA+CL,QAAQ,CAAC,EAAD,CAAvD;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,eAAhB;AAAA,MAAiCC,UAAjC;;AACA,qBAA4BN,WAAW,CAAC,UAACO,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAAvC;AAAA,MAAOC,iBAAP,gBAAOA,iBAAP;;AACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,eAAe,GAAGd,WAAW,CAAC,YAAM;AACtCa,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAGX,mBADF;AAELY,MAAAA,IAAI,EAAG;AAACV,QAAAA,MAAM,EAANA,MAAD;AAASC,QAAAA,OAAO,EAAPA;AAAT;AAFF,KAAD,CAAR;AAIH,GALkC,EAKhC,CAACA,OAAD,CALgC,CAAnC;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,eAAhB;AAAiC,IAAA,KAAK,EAAI;AAACG,MAAAA,OAAO,EAAG,MAAX;AAAmBC,MAAAA,UAAU,EAAG,MAAhC;AAAwCC,MAAAA,MAAM,EAAG;AAAjD,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,IAAI,EAAC,MAAhC;AAAuC,IAAA,KAAK,EAAEZ,OAA9C;AAAuD,IAAA,QAAQ,EAAEC,eAAjE;AAAkF,IAAA,KAAK,EAAI;AAACY,MAAAA,WAAW,EAAG,MAAf;AAAuBC,MAAAA,UAAU,EAAG;AAApC,KAA3F;AAAwI,IAAA,QAAQ,MAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAIT,iBAApD;AAAuE,IAAA,KAAK,EAAG;AAACQ,MAAAA,WAAW,EAAG,MAAf;AAAuBE,MAAAA,SAAS,EAAG;AAAnC,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAMH,CAlBD;;GAAMjB,W;UAE6CJ,Q,EACnBE,W,EACXD,W;;;KAJfG,W;AAoBNA,WAAW,CAACkB,SAAZ,GAAwB;AACpBjB,EAAAA,MAAM,EAAEX,SAAS,CAAC6B,MAAV,CAAiBC;AADL,CAAxB;AAIA,eAAepB,WAAf","sourcesContent":["\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ postId }) => {\n\n    const [comment, onChangeComment, setComment] = useInput('');\n    const {addCommentLoading} = useSelector((state)=>state.post);\n    const dispatch = useDispatch();\n    const onSubmitComment = useCallback(() => {\n        dispatch({\n            type : ADD_COMMENT_REQUEST,\n            data : {postId, comment}\n        })\n    }, [comment]);\n\n    return (\n        <Form onFinish={onSubmitComment} style = {{display : \"flex\", paddingTop : \"15px\", height : \"100px\"}}>\n            <Input name=\"user-comment\" type=\"text\" value={comment} onChange={onChangeComment} style = {{marginRight : \"20px\", marginLeft : \"15px\"}} required />\n            <Button type=\"primary\" htmlType=\"submit\" loading = {addCommentLoading} style= {{marginRight : \"15px\", marginTop : \"25px\"}} >입력</Button>\n        </Form>\n    );\n};\n\nCommentForm.prototype = {\n    postId: PropTypes.number.isRequired\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}