{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/components/PostCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card } from 'antd';\nimport { useCallback } from 'react'; //전체 post 를 가져와서 띄어주는 글 (최신순으로)\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    hashTag,\n    category,\n    id\n  } = post;\n  const onClickMore = useCallback(() => {\n    dispatch({\n      type: LOAD_POST_REQUEST,\n      data: {\n        id\n      }\n    });\n  }, []);\n  return __jsx(Card, {\n    title: post.title,\n    extra: __jsx(\"a\", {\n      href: `/post/${id}`,\n      onClick: onClickMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 42\n      }\n    }, \"More\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, category && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }\n  }, \"Category : \", __jsx(\"a\", {\n    href: `post/${category}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 42\n    }\n  }, category)), hashTag && hashTag.map((value, index) => __jsx(\"p\", {\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 54\n    }\n  }, \"  \", __jsx(\"p\", {\n    style: {\n      display: \"inline\",\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 90\n    }\n  }, \" #\"), \" \", value, \"   \")));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/PostCard.js"],"names":["Card","useCallback","PostCard","post","hashTag","category","id","onClickMore","dispatch","type","LOAD_POST_REQUEST","data","title","map","value","index","display","color"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,MAAnB;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,QAAT;AAAkBC,IAAAA;AAAlB,MAAwBH,IAA9B;AAEA,QAAMI,WAAW,GAAGN,WAAW,CAAC,MAAM;AAClCO,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEC,iBADD;AAELC,MAAAA,IAAI,EAAE;AACFL,QAAAA;AADE;AAFD,KAAD,CAAR;AAMH,GAP8B,EAO7B,EAP6B,CAA/B;AASA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,IAAI,CAACS,KAAlB;AAA0B,IAAA,KAAK,EAAE;AAAG,MAAA,IAAI,EAAG,SAAQN,EAAG,EAArB;AAAwB,MAAA,OAAO,EAAIC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAG,IAAA,IAAI,EAAK,QAAOA,QAAS,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,QAAhC,CAAhB,CADjB,EAEKD,OAAO,IAAIA,OAAO,CAACS,GAAR,CAAY,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAAG,IAAA,KAAK,EAAI;AAACC,MAAAA,OAAO,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoC;AAAG,IAAA,KAAK,EAAI;AAACA,MAAAA,OAAO,EAAG,QAAX;AAAqBC,MAAAA,KAAK,EAAG;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApC,OAA8FH,KAA9F,QAA7B,CAFhB,CADJ;AAMH,CAlBD;;AAoBA,eAAeZ,QAAf","sourcesContent":["import {Card} from 'antd';\nimport { useCallback } from 'react';\n\n//전체 post 를 가져와서 띄어주는 글 (최신순으로)\nconst PostCard = ({ post }) => {\n    const {hashTag,category,id} = post;\n\n    const onClickMore = useCallback(() => {\n        dispatch({\n            type: LOAD_POST_REQUEST,\n            data: {\n                id\n            },\n        })\n    },[]);\n\n    return (\n        <Card title={post.title}  extra={<a href={`/post/${id}`} onClick = {onClickMore}>More</a>} >\n            {category && <div>Category : <a href = {`post/${category}`}>{category}</a></div> } \n            {hashTag && hashTag.map((value,index) => <p style = {{display : \"inline\"}}>  <p style = {{display : \"inline\" ,color : \"blue\"}}> #</p> {value}   </p>)}\n        </Card>\n    );\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}