{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(updatePost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadMainPosts),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(searchPosts),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadCategoryposts),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(loadCurpost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(loadPostNum),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdatePost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMainPost),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadCurpost),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadCatoryposts),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadSearchposts),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPostnum),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_CURRENT_PAGENUM, UPDATE_POST_FAILURE, UPDATE_POST_REQUEST, UPDATE_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS, SEARCH_POSTS_FAILURE, SEARCH_POSTS_REQUEST, SEARCH_POSTS_SUCCESS, LOAD_CATEGORYPOSTS_FAILURE, LOAD_CATEGORYPOSTS_REQUEST, LOAD_CATEGORYPOSTS_SUCCESS, LOAD_CURPOST_FAILURE, LOAD_CURPOST_REQUEST, LOAD_CURPOST_SUCCESS, LOAD_POSTNUM_FAILURE, LOAD_POSTNUM_REQUEST, LOAD_POSTNUM_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: _context2.t0.response\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction updatePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data.id), data);\n}\n\nfunction updatePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function updatePost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(updatePostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log(result.data);\n          _context4.next = 7;\n          return put({\n            type: UPDATE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context4.next = 14;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 14;\n          return put({\n            type: UPDATE_POST_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction loadMainPostsAPI(data) {\n  return axios.get(\"/posts/load/main/\".concat(data.page));\n}\n\nfunction loadMainPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMainPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadMainPostsAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_MAIN_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 8;\n          return put({\n            type: SET_CURRENT_PAGENUM,\n            data: action.data\n          });\n\n        case 8:\n          _context5.next = 15;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 15;\n          return put({\n            type: LOAD_MAIN_POSTS_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\n\nfunction searchPostsAPI(data) {\n  return axios.get(\"/posts/search/\".concat(encodeURIComponent(data)));\n}\n\nfunction searchPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function searchPosts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          console.log(\"action.data : \", action.data);\n          _context6.next = 4;\n          return call(searchPostsAPI, action.data);\n\n        case 4:\n          result = _context6.sent;\n          _context6.next = 7;\n          return put({\n            type: SEARCH_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context6.next = 14;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 14;\n          return put({\n            type: SEARCH_POSTS_FAILURE,\n            data: _context6.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 9]]);\n}\n\nfunction loadCategorypostsAPI(data) {\n  return axios.get(\"/posts/load/\".concat(data.category, \"/\").concat(data.page));\n}\n\nfunction loadCategoryposts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadCategoryposts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadCategorypostsAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_CATEGORYPOSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 8;\n          return put({\n            type: SET_CURRENT_PAGENUM,\n            data: action.data\n          });\n\n        case 8:\n          _context7.next = 15;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 15;\n          return put({\n            type: LOAD_CATEGORYPOSTS_FAILURE,\n            data: _context7.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction loadCurpostAPI(data) {\n  return axios.get(\"/post/load/\".concat(data));\n}\n\nfunction loadCurpost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadCurpost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(loadCurpostAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: LOAD_CURPOST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 13;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 13;\n          return put({\n            type: LOAD_CURPOST_FAILURE,\n            data: _context8.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction loadPostNumAPI(data) {\n  return axios.get(\"/posts/load/length/\".concat(data));\n}\n\nfunction loadPostNum(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPostNum$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(loadPostNumAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: LOAD_POSTNUM_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: LOAD_POSTNUM_FAILURE,\n            data: _context9.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchUpdatePost() {\n  return _regeneratorRuntime.wrap(function watchUpdatePost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(UPDATE_POST_REQUEST, updatePost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchLoadMainPost() {\n  return _regeneratorRuntime.wrap(function watchLoadMainPost$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchLoadCurpost() {\n  return _regeneratorRuntime.wrap(function watchLoadCurpost$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOAD_CURPOST_REQUEST, loadCurpost);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchLoadCatoryposts() {\n  return _regeneratorRuntime.wrap(function watchLoadCatoryposts$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LOAD_CATEGORYPOSTS_REQUEST, loadCategoryposts);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchLoadSearchposts() {\n  return _regeneratorRuntime.wrap(function watchLoadSearchposts$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(SEARCH_POSTS_REQUEST, searchPosts);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchLoadPostnum() {\n  return _regeneratorRuntime.wrap(function watchLoadPostnum$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(LOAD_POSTNUM_REQUEST, loadPostNum);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchUpdatePost), fork(watchLoadMainPost), fork(watchLoadCurpost), fork(watchLoadCatoryposts), fork(watchLoadSearchposts), fork(watchLoadPostnum)]);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/sagas/post.js"],"names":["addPost","addComment","removePost","updatePost","loadMainPosts","searchPosts","loadCategoryposts","loadCurpost","loadPostNum","watchAddPost","watchAddComment","watchRemovePost","watchUpdatePost","watchLoadMainPost","watchLoadCurpost","watchLoadCatoryposts","watchLoadSearchposts","watchLoadPostnum","postSaga","all","fork","takeLatest","put","call","axios","SET_CURRENT_PAGENUM","UPDATE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","SEARCH_POSTS_REQUEST","SEARCH_POSTS_SUCCESS","LOAD_CATEGORYPOSTS_FAILURE","LOAD_CATEGORYPOSTS_REQUEST","LOAD_CATEGORYPOSTS_SUCCESS","LOAD_CURPOST_FAILURE","LOAD_CURPOST_REQUEST","LOAD_CURPOST_SUCCESS","LOAD_POSTNUM_FAILURE","LOAD_POSTNUM_REQUEST","LOAD_POSTNUM_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","addPostAPI","data","post","action","result","type","console","error","response","addCommentAPI","postId","removePostAPI","updatePostAPI","patch","id","log","loadMainPostsAPI","get","page","searchPostsAPI","encodeURIComponent","loadCategorypostsAPI","category","loadCurpostAPI","loadPostNumAPI"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put , call} from 'redux-saga/effects';\nimport axios from 'axios'\n\nimport {\n    SET_CURRENT_PAGENUM,\n    UPDATE_POST_FAILURE,\n    UPDATE_POST_REQUEST,\n    UPDATE_POST_SUCCESS,\n    ADD_POST_FAILURE,\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n    LOAD_MAIN_POSTS_FAILURE,\n    LOAD_MAIN_POSTS_REQUEST,\n    LOAD_MAIN_POSTS_SUCCESS,\n    SEARCH_POSTS_FAILURE,\n    SEARCH_POSTS_REQUEST,\n    SEARCH_POSTS_SUCCESS,\n    LOAD_CATEGORYPOSTS_FAILURE,\n    LOAD_CATEGORYPOSTS_REQUEST,\n    LOAD_CATEGORYPOSTS_SUCCESS,\n    LOAD_CURPOST_FAILURE,\n    LOAD_CURPOST_REQUEST,\n    LOAD_CURPOST_SUCCESS,\n    LOAD_POSTNUM_FAILURE,\n    LOAD_POSTNUM_REQUEST,\n    LOAD_POSTNUM_SUCCESS,\n    REMOVE_POST_FAILURE,\n    REMOVE_POST_REQUEST,\n    REMOVE_POST_SUCCESS,\n} from '../reducers/post';\n\n\nfunction addPostAPI(data) {\n    return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n    try {\n        const result = yield call(addPostAPI,action.data)\n        yield put({ \n            type: ADD_POST_SUCCESS,\n            data : result.data,\n        })\n    } catch (error) {\n        console.error(error);\n            yield put({\n                type: ADD_POST_FAILURE,\n                error: error.response \n            })\n        }\n\n}\n\n\nfunction addCommentAPI(data) {\n    return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n    try {\n        const result = yield call(addCommentAPI,action.data)\n        yield put({ \n            type: ADD_COMMENT_SUCCESS,\n            data : result.data,\n        })\n    } catch (error) {\n        console.error(error);\n            yield put({\n                type: ADD_COMMENT_FAILURE,\n                error: error.response \n            })\n        }\n\n}\n\n\nfunction removePostAPI(data) {\n    return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n    try {\n        const result = yield call(removePostAPI,action.data);\n        yield put({ \n            type: REMOVE_POST_SUCCESS,\n            data : result.data\n        })\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: REMOVE_POST_FAILURE,\n            data: error.response.data\n        })\n    }\n\n}\n\nfunction updatePostAPI(data) {\n    return axios.patch(`/post/${data.id}`, data);\n}\n\nfunction* updatePost(action) {\n    try {        \n        const result = yield call(updatePostAPI,action.data)\n        console.log(result.data);\n        yield put({\n            type: UPDATE_POST_SUCCESS,\n            data : result.data \n        })\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: UPDATE_POST_FAILURE,\n            data: error.response.data\n        })\n    }\n}\n\nfunction loadMainPostsAPI(data) {\n    return axios.get(`/posts/load/main/${data.page}`);\n}\n\nfunction* loadMainPosts(action) {\n    try {\n        const result = yield call(loadMainPostsAPI,action.data)\n        yield put({ \n            type: LOAD_MAIN_POSTS_SUCCESS,\n            data : result.data,\n        })\n        yield put({\n            type : SET_CURRENT_PAGENUM,\n            data : action.data,\n        })\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: LOAD_MAIN_POSTS_FAILURE,\n            data: error.response.data \n        })\n    }\n}\n\nfunction searchPostsAPI(data) {\n    return axios.get(`/posts/search/${encodeURIComponent(data)}`);\n}\n\nfunction* searchPosts(action) {\n    try {\n        console.log(\"action.data : \", action.data);\n        const result = yield call(searchPostsAPI,action.data)\n        yield put({\n            type: SEARCH_POSTS_SUCCESS,\n            data : result.data,\n        })\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: SEARCH_POSTS_FAILURE,\n            data: error.response.data \n        })\n    }\n}\n\n\nfunction loadCategorypostsAPI(data) {\n    return axios.get(`/posts/load/${data.category}/${data.page}`);\n}\n\nfunction* loadCategoryposts(action) {\n    try {\n        const result = yield call(loadCategorypostsAPI,action.data)\n        yield put({ \n            type: LOAD_CATEGORYPOSTS_SUCCESS,\n            data : result.data,\n        })\n        yield put({\n            type : SET_CURRENT_PAGENUM,\n            data : action.data,\n        })\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: LOAD_CATEGORYPOSTS_FAILURE,\n            data: error.response.data \n        })\n    }\n}\n\nfunction loadCurpostAPI(data) {\n    return axios.get(`/post/load/${data}`);\n}\n\nfunction* loadCurpost(action) {\n    try {\n        const result = yield call(loadCurpostAPI,action.data)\n        yield put({ \n            type: LOAD_CURPOST_SUCCESS,\n            data : result.data,\n        })\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: LOAD_CURPOST_FAILURE,\n            data: error.response.data \n        })\n    }\n}\n\nfunction loadPostNumAPI(data) {\n    return axios.get(`/posts/load/length/${data}`);\n}\n\nfunction* loadPostNum(action) {\n    try {\n        const result = yield call(loadPostNumAPI,action.data)\n        yield put({ \n            type: LOAD_POSTNUM_SUCCESS,\n            data : result.data,\n        })\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: LOAD_POSTNUM_FAILURE,\n            data: error.response.data \n        })\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n} \n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n} \n\nfunction* watchRemovePost() {\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\n} \n\nfunction* watchUpdatePost() {\n    yield takeLatest(UPDATE_POST_REQUEST, updatePost);\n} \n\nfunction* watchLoadMainPost() {\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\nfunction* watchLoadCurpost() {\n    yield takeLatest(LOAD_CURPOST_REQUEST, loadCurpost);\n} \nfunction* watchLoadCatoryposts() {\n    yield takeLatest(LOAD_CATEGORYPOSTS_REQUEST, loadCategoryposts);\n} \n\nfunction* watchLoadSearchposts() {\n    yield takeLatest(SEARCH_POSTS_REQUEST, searchPosts);\n} \n\nfunction* watchLoadPostnum() {\n    yield takeLatest(LOAD_POSTNUM_REQUEST, loadPostNum);\n} \n\n\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n        fork(watchRemovePost),\n        fork(watchUpdatePost),\n        fork(watchLoadMainPost),\n        fork(watchLoadCurpost),\n        fork(watchLoadCatoryposts),\n        fork(watchLoadSearchposts),\n        fork(watchLoadPostnum),\n    ])\n}"]},"metadata":{},"sourceType":"module"}