{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport Head from 'next/head';\nimport LoginForm from '../components/LoginForm';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { message } from 'antd';\n\nvar Login = function Login() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      logInDone = _useSelector.logInDone;\n\n  var id = me === null || me === void 0 ? void 0 : me.id;\n  useEffect(function () {\n    if (me && id) {\n      if (logInDone) {\n        message.success(\"로그인이 완료되었습니다! 메인화면으로 이동합니다.\");\n        Router.replace('/');\n      } else {\n        message.error(\"이미 로그인한 사용자입니다. 메인화면으로 이동합니다.\");\n        Router.replace('/');\n      }\n    }\n  }, [me, id]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uB85C\\uADF8\\uC778\")), __jsx(AppLayout, null, __jsx(LoginForm, null)));\n};\n\nexport var __N_SSP = true;\nexport default Login;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/login.js"],"names":["React","useEffect","AppLayout","Head","LoginForm","useSelector","Router","LOAD_POSTS_REQUEST","message","Login","state","user","me","logInDone","id","success","replace","error"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AAIA,SAASC,OAAT,QAAwB,MAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEhB,qBAAwBJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAAnC;AAAA,MAAOC,EAAP,gBAAOA,EAAP;AAAA,MAAWC,SAAX,gBAAWA,SAAX;;AACA,MAAMC,EAAE,GAAGF,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEE,EAAf;AACAb,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGW,EAAE,IAAIE,EAAT,EAAY;AACR,UAAGD,SAAH,EAAa;AACTL,QAAAA,OAAO,CAACO,OAAR,CAAgB,6BAAhB;AACAT,QAAAA,MAAM,CAACU,OAAP,CAAe,GAAf;AACH,OAHD,MAIK;AACDR,QAAAA,OAAO,CAACS,KAAR,CAAc,+BAAd;AACAX,QAAAA,MAAM,CAACU,OAAP,CAAe,GAAf;AACH;AAEJ;AACJ,GAZQ,EAYP,CAACJ,EAAD,EAAIE,EAAJ,CAZO,CAAT;AAeA,SACI,4BACI,MAAC,IAAD,QACI,0CADJ,CADJ,EAII,MAAC,SAAD,QACI,MAAC,SAAD,OADJ,CAJJ,CADJ;AAUH,CA7BD;;;AA6CA,eAAeL,KAAf","sourcesContent":["import React,{useEffect} from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport Head from 'next/head';\nimport LoginForm from '../components/LoginForm';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user'\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport { message } from 'antd';\n\nconst Login = () => {\n\n    const {me, logInDone} = useSelector((state)=>state.user);\n    const id = me?.id;\n    useEffect(()=>{\n        if(me && id){\n            if(logInDone){\n                message.success(\"로그인이 완료되었습니다! 메인화면으로 이동합니다.\");\n                Router.replace('/');\n            }\n             else{\n                message.error(\"이미 로그인한 사용자입니다. 메인화면으로 이동합니다.\");\n                Router.replace('/');\n            }\n            \n        }\n    },[me,id])\n\n\n    return (\n        <>\n            <Head>\n                <title>로그인</title>\n            </Head>\n            <AppLayout>\n                <LoginForm />\n            </AppLayout>\n        </>\n    );\n}\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}