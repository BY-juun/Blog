{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/components/PostCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { loadPost } from \"../reducers/post\"; //전체 post 를 가져와서 띄어주는 글 (최신순으로)\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    hashTag,\n    category\n  } = post;\n  const dispatch = useDispatch();\n\n  const loadPosts = () => {\n    console.log(\"loadPosts\");\n    dispatch(loadPost(post.id));\n  };\n\n  const hashTagArr = [];\n  hashTag.split(/(#[^\\s#]+)/g).map(v => {\n    hashTagArr.push(v);\n  });\n  return __jsx(Card, {\n    title: post.title,\n    extra: __jsx(\"a\", {\n      href: `/post/1`,\n      onClick: loadPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 42\n      }\n    }, \"More\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, category && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }\n  }, \"Category : \", __jsx(\"a\", {\n    href: `post/${category}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 42\n    }\n  }, category)), hashTagARR && hashTagARR.map((value, index) => __jsx(\"p\", {\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 60\n    }\n  }, \"  \", __jsx(\"p\", {\n    style: {\n      display: \"inline\",\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 96\n    }\n  }, \" #\"), \" \", value, \"   \")));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/PostCard.js"],"names":["Card","useDispatch","loadPost","PostCard","post","hashTag","category","dispatch","loadPosts","console","log","id","hashTagArr","split","map","v","push","title","hashTagARR","value","index","display","color"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,MAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAqBF,IAA3B;AACA,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;;AACA,QAAMO,SAAS,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAH,IAAAA,QAAQ,CAACL,QAAQ,CAACE,IAAI,CAACO,EAAN,CAAT,CAAR;AACH,GAHD;;AAIA,QAAMC,UAAU,GAAG,EAAnB;AACAP,EAAAA,OAAO,CAACQ,KAAR,CAAc,aAAd,EAA6BC,GAA7B,CAAkCC,CAAD,IAAO;AAACH,IAAAA,UAAU,CAACI,IAAX,CAAgBD,CAAhB;AAAmB,GAA5D;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,IAAI,CAACa,KAAlB;AAA0B,IAAA,KAAK,EAAE;AAAG,MAAA,IAAI,EAAG,SAAV;AAAoB,MAAA,OAAO,EAAIT,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAG,IAAA,IAAI,EAAK,QAAOA,QAAS,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,QAAhC,CAAhB,CADjB,EAEKY,UAAU,IAAIA,UAAU,CAACJ,GAAX,CAAe,CAACK,KAAD,EAAOC,KAAP,KAAiB;AAAG,IAAA,KAAK,EAAI;AAACC,MAAAA,OAAO,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoC;AAAG,IAAA,KAAK,EAAI;AAACA,MAAAA,OAAO,EAAG,QAAX;AAAqBC,MAAAA,KAAK,EAAG;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApC,OAA8FH,KAA9F,QAAhC,CAFnB,CADJ;AAMH,CAfD;;AAiBA,eAAehB,QAAf","sourcesContent":["import {Card} from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { loadPost } from \"../reducers/post\";\n\n//전체 post 를 가져와서 띄어주는 글 (최신순으로)\nconst PostCard = ({ post }) => {\n    const {hashTag,category} = post;\n    const dispatch = useDispatch();\n    const loadPosts = () => {\n        console.log(\"loadPosts\");\n        dispatch(loadPost(post.id));\n    }\n    const hashTagArr = []\n    hashTag.split(/(#[^\\s#]+)/g).map((v) => {hashTagArr.push(v)});\n    return (\n        <Card title={post.title}  extra={<a href={`/post/1`} onClick = {loadPosts}>More</a>} >\n            {category && <div>Category : <a href = {`post/${category}`}>{category}</a></div> } \n            {hashTagARR && hashTagARR.map((value,index) => <p style = {{display : \"inline\"}}>  <p style = {{display : \"inline\" ,color : \"blue\"}}> #</p> {value}   </p>)}\n        </Card>\n    );\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}