{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable no-unused-vars */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useInput from '../hooks/useInput';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Button, Form, Input, Select, message } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, UPDATE_POST_REQUEST } from \"../reducers/post\";\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nconst Editor = dynamic(() => import('./Editor'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Editor')],\n    modules: ['./Editor']\n  }\n});\nexport const Global = createGlobalStyle([\".ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margintop:15px;}.ck.ck-editor{margin-top:15px;}.ck-content{height:500px;}\"]);\nconst LoginButton = styled(Button).withConfig({\n  displayName: \"WritePostForm__LoginButton\",\n  componentId: \"sc-1o1we0s-0\"\n})([\"margin-right:10px;\"]);\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"WritePostForm__ButtonWrapper\",\n  componentId: \"sc-1o1we0s-1\"\n})([\"margin-top:10px;\"]);\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"WritePostForm__FormWrapper\",\n  componentId: \"sc-1o1we0s-2\"\n})([\"padding:10px;\"]);\n\nconst WritePostForm = ({\n  id\n}) => {\n  const dispatch = useDispatch();\n  const {\n    addPostLoading,\n    updatePostDone,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [title, onChangeTitle] = useInput('');\n  const {\n    0: category,\n    1: setCategory\n  } = useState('');\n  const [content, onChangeContent, setContent] = useInput('');\n  const [hashTag, onChangeHashtag] = useInput('');\n  const {\n    TextArea\n  } = Input;\n  useEffect(() => {\n    if (updatePostDone) {\n      message.success(updatePostDone);\n      setTimeout(() => {\n        //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n        Router.replace('/');\n      }, 1000);\n    }\n  }, [updatePostDone]);\n  useEffect(() => {\n    if (addPostDone) {\n      message.success(\"게시글 등록 완료!\");\n      setTimeout(() => {\n        //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n        Router.replace('/');\n      }, 1000);\n    }\n  }, [addPostDone]);\n  const onSubmitForm = useCallback(() => {\n    if (id) {\n      dispatch({\n        type: UPDATE_POST_REQUEST,\n        data: {\n          title,\n          category,\n          hashTag,\n          content,\n          id\n        }\n      });\n    } else {\n      dispatch({\n        type: ADD_POST_REQUEST,\n        data: {\n          title,\n          category,\n          hashTag,\n          content\n        }\n      });\n    }\n  }, [title, category, hashTag, content, id]);\n  const handleTeacherChange = useCallback(value => {\n    setCategory(value);\n  }, [category]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm\n  }, __jsx(Global, null), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"title\"\n  }, \"\\uC81C\\uBAA9\"), __jsx(\"br\", null), __jsx(TextArea, {\n    value: title,\n    onChange: onChangeTitle,\n    style: {\n      width: \"100%\"\n    }\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"belong\"\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC\"), __jsx(\"br\", null), __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    onChange: handleTeacherChange\n  }, __jsx(Select.Option, {\n    value: \"JavaScript\"\n  }, \"JavaScript\"), __jsx(Select.Option, {\n    value: \"React\"\n  }, \"React\"), __jsx(Select.Option, {\n    value: \"web\"\n  }, \"web\"), __jsx(Select.Option, {\n    value: \"TypeScript\"\n  }, \"TypeScript\"), __jsx(Select.Option, {\n    value: \"NodeJs\"\n  }, \"NodeJs\"), __jsx(Select.Option, {\n    value: \"DataStructure\"\n  }, \"DataStructure\"), __jsx(Select.Option, {\n    value: \"OperatingSystem\"\n  }, \"OperatingSystem\"), __jsx(Select.Option, {\n    value: \"HTML-CSS\"\n  }, \"HTML-CSS\"), __jsx(Select.Option, {\n    value: \"Error\"\n  }, \"Error\"), __jsx(Select.Option, {\n    value: \"Algorithm\"\n  }, \"Algorithm\"), __jsx(Select.Option, {\n    value: \"IntensiveEducation1\"\n  }, \"IntensiveEducation1\"))), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"hashtag\"\n  }, \"\\uD574\\uC2DC\\uD0DC\\uADF8\"), __jsx(\"br\", null), __jsx(TextArea, {\n    value: hashTag,\n    onChange: onChangeHashtag,\n    style: {\n      width: \"100%\"\n    }\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"content\"\n  }, \"\\uB0B4\\uC6A9\"), __jsx(\"br\", null), __jsx(Editor, {\n    setContent: setContent\n  })), __jsx(ButtonWrapper, null, __jsx(LoginButton, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addPostLoading\n  }, \"\\uB4F1\\uB85D\")));\n};\n\nexport default WritePostForm;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/WritePostForm.js"],"names":["React","useCallback","useEffect","useState","useInput","styled","createGlobalStyle","Button","Form","Input","Select","message","useDispatch","useSelector","ADD_POST_REQUEST","UPDATE_POST_REQUEST","Router","dynamic","Editor","ssr","Global","LoginButton","ButtonWrapper","div","FormWrapper","WritePostForm","id","dispatch","addPostLoading","updatePostDone","addPostDone","state","post","title","onChangeTitle","category","setCategory","content","onChangeContent","setContent","hashTag","onChangeHashtag","TextArea","success","setTimeout","replace","onSubmitForm","type","data","handleTeacherChange","value","width"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useInput from '../hooks/useInput';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Button, Form, Input, Select,message } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  ADD_POST_REQUEST, UPDATE_POST_REQUEST } from \"../reducers/post\";\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic'\nconst Editor = dynamic(() => import('./Editor'), {\n    ssr: false\n})\n\n\nexport const Global = createGlobalStyle`\n    .ck.ck-reset, .ck.ck-reset_all, .ck.ck-reset_all *{\n        margintop : 15px;\n    }\n    .ck.ck-editor {\n        margin-top : 15px;\n    }\n    .ck-content { \n        height : 500px;\n    }\n`;\n\nconst LoginButton = styled(Button)`\nmargin-right : 10px;\n`;\n\nconst ButtonWrapper = styled.div`\nmargin-top : 10px;\n`\nconst FormWrapper = styled(Form)`\npadding : 10px;\n`;\n\n\n\nconst WritePostForm = ({ id }) => {\n    const dispatch = useDispatch();\n    const { addPostLoading, updatePostDone,addPostDone } = useSelector((state) => state.post);\n    const [title, onChangeTitle] = useInput('');\n    const [category, setCategory] = useState('');\n    const [content, onChangeContent, setContent] = useInput('');\n    const [hashTag, onChangeHashtag] = useInput('');\n    const { TextArea } = Input;\n\n    useEffect(() => {\n        if (updatePostDone) {\n            message.success(updatePostDone);\n            setTimeout(() => { //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n                Router.replace('/');\n            }, 1000);\n        }\n    }, [updatePostDone])\n\n    useEffect(() => {\n        if (addPostDone) {\n            message.success(\"게시글 등록 완료!\");\n            setTimeout(() => { //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n                Router.replace('/');\n            }, 1000);\n        }\n    }, [addPostDone])\n\n\n    const onSubmitForm = useCallback(() => {\n        if (id) {\n            dispatch({\n                type: UPDATE_POST_REQUEST,\n                data: {\n                    title, category, hashTag, content, id\n                }\n            })\n        } else {\n            dispatch({\n                type: ADD_POST_REQUEST,\n                data: {\n                    title, category, hashTag, content,\n                }\n            })\n        }\n\n    }, [title, category, hashTag, content, id]);\n\n\n    const handleTeacherChange = useCallback((value) => {\n        setCategory(value);\n    }, [category])\n\n\n    return (\n\n        <FormWrapper onFinish={onSubmitForm}>\n            <Global />\n            <div>\n                <label htmlFor='title'>제목</label>\n                <br />\n                <TextArea value={title} onChange={onChangeTitle} style={{ width: \"100%\" }} />\n            </div>\n            <div>\n                <label htmlFor='belong'>카테고리</label>\n                <br />\n                <Select style={{ width: \"100%\" }} onChange={handleTeacherChange}>\n                    <Select.Option value=\"JavaScript\">JavaScript</Select.Option>\n                    <Select.Option value=\"React\">React</Select.Option>\n                    <Select.Option value=\"web\">web</Select.Option>\n                    <Select.Option value=\"TypeScript\">TypeScript</Select.Option>\n                    <Select.Option value=\"NodeJs\">NodeJs</Select.Option>\n                    <Select.Option value=\"DataStructure\">DataStructure</Select.Option>\n                    <Select.Option value=\"OperatingSystem\">OperatingSystem</Select.Option>\n                    <Select.Option value=\"HTML-CSS\">HTML-CSS</Select.Option>\n                    <Select.Option value=\"Error\">Error</Select.Option>\n                    <Select.Option value=\"Algorithm\">Algorithm</Select.Option>\n                    <Select.Option value=\"IntensiveEducation1\">IntensiveEducation1</Select.Option>\n                </Select>\n            </div>\n            <div>\n                <label htmlFor='hashtag'>해시태그</label>\n                <br />\n                <TextArea value={hashTag} onChange={onChangeHashtag} style={{ width: \"100%\" }} />\n            </div>\n            <div>\n                <label htmlFor='content'>내용</label>\n                <br />\n                <Editor setContent={setContent} />\n            </div>\n            <ButtonWrapper>\n                <LoginButton type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={addPostLoading}>등록</LoginButton>\n            </ButtonWrapper>\n\n        </FormWrapper>\n\n    );\n}\n\nexport default WritePostForm;"]},"metadata":{},"sourceType":"module"}