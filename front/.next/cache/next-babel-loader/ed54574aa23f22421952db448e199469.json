{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/pages/post/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport Router, { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useEffect } from \"react\";\nimport { FormOutlined } from '@ant-design/icons';\nimport { LOAD_CURPOST_REQUEST, REMOVE_POST_REQUEST } from \"../../reducers/post\";\nimport ReactHtmlParser from 'html-react-parser';\nimport { PageHeader, Tag, Comment, Avatar, Button } from 'antd';\nimport CommentForm from '../../components/CommentForm';\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport moment from 'moment'; //More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nmoment.locale(\"ko\");\n\nconst Post = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    currentPost,\n    removePostDone,\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    console.log(id);\n\n    if (id) {\n      dispatch({\n        type: LOAD_CURPOST_REQUEST,\n        data: id\n      });\n    }\n  }, [id]);\n  useEffect(() => {\n    if (removePostDone) {\n      alert(\"해당 글이 삭제되었습니다\");\n      Router.push('/');\n    }\n  }, [removePostDone]);\n  const onClickDelete = useCallback(() => {\n    const onemore = prompt(\"정말 삭제하시겠습니까? 삭제를 원하면 delete를 입력해주세요\");\n\n    if (onemore === \"delete\") {\n      dispatch({\n        type: REMOVE_POST_REQUEST,\n        data: id\n      });\n    }\n  }, []);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, me && me.nickname === \"By_juun\" && __jsx(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, me && me.email === \"neostgeart@gmail.com\" && __jsx(Button, {\n    style: {\n      backgroundColor: \"lightblue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }\n  }, __jsx(\"a\", {\n    href: `/UpdatePost/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 74\n    }\n  }, \"\\uAE00 \\uC218\\uC815\")), me && me.email === \"neostgeart@gmail.com\" && __jsx(Button, {\n    style: {\n      backgroundColor: \"palevioletred\"\n    },\n    onClick: onClickDelete,\n    loading: removePostLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }\n  }, \"\\uAE00 \\uC0AD\\uC81C\")), currentPost && __jsx(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginRight: \"10px\",\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, moment(currentPost.createdAt).format('L')), currentPost && __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, currentPost.title), currentPost && __jsx(PageHeader, {\n    className: \"site-page-header\",\n    tags: __jsx(Tag, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, currentPost.category),\n    subTitle: currentPost.hashTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\",\n      marginRight: \"15px\",\n      minHeight: \"700px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, currentPost && ReactHtmlParser(currentPost.content)), me ? __jsx(CommentForm, {\n    postId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }) : __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"15px\",\n      marginBottom: \"15px\",\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 50\n    }\n  }, __jsx(FormOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 149\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 165\n    }\n  }, \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778 \\uD574\\uC8FC\\uC138\\uC694\")), __jsx(\"div\", {\n    style: {\n      borderTop: \"0.5px solid lightsteelblue\",\n      marginTop: \"10px\",\n      marginRight: \"15px\",\n      marginLeft: \"15px\",\n      marginBottom: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, currentPost && currentPost.Comments && currentPost.Comments.map(commentInfo => __jsx(Comment, {\n    key: commentInfo.id,\n    datetime: moment(commentInfo.createdAt, \"YYYYMMDD\").format('L'),\n    author: commentInfo.User.nickname,\n    content: commentInfo.content,\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }, commentInfo.User.nickname[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 55\n    }\n  }))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/post/[id].js"],"names":["AppLayout","Router","useRouter","useDispatch","useSelector","useCallback","useEffect","FormOutlined","LOAD_CURPOST_REQUEST","REMOVE_POST_REQUEST","ReactHtmlParser","PageHeader","Tag","Comment","Avatar","Button","CommentForm","wrapper","END","axios","LOAD_MY_INFO_REQUEST","moment","locale","Post","dispatch","router","id","query","currentPost","removePostDone","removePostLoading","state","post","me","user","console","log","type","data","alert","push","onClickDelete","onemore","prompt","nickname","textAlign","marginTop","email","backgroundColor","marginRight","createdAt","format","title","category","hashTag","marginLeft","minHeight","content","marginBottom","fontSize","borderTop","Comments","map","commentInfo","User","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAQC,MAAR,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAASC,oBAAT,EAA8BC,mBAA9B,QAAyD,qBAAzD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,MAA3C,QAAwD,MAAxD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;AACA;;AAEAA,MAAM,CAACC,MAAP,CAAc,IAAd;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,MAAM,GAAGvB,SAAS,EAAxB;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAcC,IAAAA,cAAd;AAA+BC,IAAAA;AAA/B,MAAoD1B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAArE;AACA,QAAM;AAACC,IAAAA;AAAD,MAAO7B,WAAW,CAAE2B,KAAD,IAASA,KAAK,CAACG,IAAhB,CAAxB;AACA5B,EAAAA,SAAS,CAAC,MAAI;AACV6B,IAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;;AACA,QAAGA,EAAH,EAAM;AACFF,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAG7B,oBADF;AAEL8B,QAAAA,IAAI,EAAGZ;AAFF,OAAD,CAAR;AAIH;AAEJ,GATQ,EASP,CAACA,EAAD,CATO,CAAT;AAWApB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGuB,cAAH,EAAkB;AACdU,MAAAA,KAAK,CAAC,eAAD,CAAL;AACAtC,MAAAA,MAAM,CAACuC,IAAP,CAAY,GAAZ;AACH;AACJ,GALQ,EAKP,CAACX,cAAD,CALO,CAAT;AAOA,QAAMY,aAAa,GAAGpC,WAAW,CAAC,MAAI;AAClC,UAAMqC,OAAO,GAAGC,MAAM,CAAC,qCAAD,CAAtB;;AACA,QAAGD,OAAO,KAAK,QAAf,EACA;AACIlB,MAAAA,QAAQ,CAAC;AACNa,QAAAA,IAAI,EAAG5B,mBADD;AAEN6B,QAAAA,IAAI,EAAGZ;AAFD,OAAD,CAAR;AAIH;AACJ,GATgC,EAS/B,EAT+B,CAAjC;AAWA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,EAAE,IAAIA,EAAE,CAACW,QAAH,KAAgB,SAAtB,IACG;AAAK,IAAA,KAAK,EAAI;AAACC,MAAAA,SAAS,EAAG,OAAb;AAAuBC,MAAAA,SAAS,EAAG;AAAnC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,EAAE,IAAIA,EAAE,CAACc,KAAH,KAAa,sBAAnB,IACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAI;AAACC,MAAAA,eAAe,EAAG;AAAnB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkD;AAAI,IAAA,IAAI,EAAK,eAActB,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAlD,CAFP,EAGKO,EAAE,IAAIA,EAAE,CAACc,KAAH,KAAa,sBAAnB,IACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAI;AAACC,MAAAA,eAAe,EAAG;AAAnB,KAAjB;AAAsD,IAAA,OAAO,EAAIP,aAAjE;AAAgF,IAAA,OAAO,EAAIX,iBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJP,CAFR,EAUKF,WAAW,IAAI;AAAK,IAAA,KAAK,EAAI;AAACiB,MAAAA,SAAS,EAAG,OAAb;AAAsBI,MAAAA,WAAW,EAAG,MAApC;AAA4CH,MAAAA,SAAS,EAAG;AAAxD,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgFzB,MAAM,CAACO,WAAW,CAACsB,SAAb,CAAN,CAA8BC,MAA9B,CAAqC,GAArC,CAAhF,CAVpB,EAWKvB,WAAW,IAAI;AAAI,IAAA,KAAK,EAAI;AAACiB,MAAAA,SAAS,EAAG,QAAb;AAAuBC,MAAAA,SAAS,EAAG;AAAnC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0DlB,WAAW,CAACwB,KAAtE,CAXpB,EAYKxB,WAAW,IAAI,MAAC,UAAD;AAChB,IAAA,SAAS,EAAC,kBADM;AAEhB,IAAA,IAAI,EAAI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,WAAW,CAACyB,QAAjC,CAFQ;AAGhB,IAAA,QAAQ,EAAEzB,WAAW,CAAC0B,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZpB,EAiBI;AAAK,IAAA,KAAK,EAAI;AAACC,MAAAA,UAAU,EAAG,MAAd;AAAqBN,MAAAA,WAAW,EAAG,MAAnC;AAA0CO,MAAAA,SAAS,EAAG;AAAtD,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+E5B,WAAW,IAAIlB,eAAe,CAACkB,WAAW,CAAC6B,OAAb,CAA7G,CAjBJ,EAkBKxB,EAAE,GAAG,MAAC,WAAD;AAAa,IAAA,MAAM,EAAIP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkC;AAAK,IAAA,KAAK,EAAI;AAACmB,MAAAA,SAAS,EAAG,QAAb;AAAuBC,MAAAA,SAAS,EAAG,MAAnC;AAA0CY,MAAAA,YAAY,EAAG,MAAzD;AAAiEC,MAAAA,QAAQ,EAAG;AAA5E,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmG,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnG,EAAmH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAAnH,CAlBzC,EAmBI;AAAK,IAAA,KAAK,EAAI;AAACC,MAAAA,SAAS,EAAG,4BAAb;AAA4Cd,MAAAA,SAAS,EAAG,MAAxD;AAAgEG,MAAAA,WAAW,EAAG,MAA9E;AAAsFM,MAAAA,UAAU,EAAG,MAAnG;AAA2GG,MAAAA,YAAY,EAAG;AAA1H,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC9B,WAAW,IAAIA,WAAW,CAACiC,QAA3B,IAEDjC,WAAW,CAACiC,QAAZ,CAAqBC,GAArB,CAA0BC,WAAD,IAAiB,MAAC,OAAD;AAAS,IAAA,GAAG,EAAIA,WAAW,CAACrC,EAA5B;AACzC,IAAA,QAAQ,EAAIL,MAAM,CAAC0C,WAAW,CAACb,SAAb,EAAuB,UAAvB,CAAN,CAAyCC,MAAzC,CAAgD,GAAhD,CAD6B;AAEzC,IAAA,MAAM,EAAIY,WAAW,CAACC,IAAZ,CAAiBpB,QAFc;AAGzC,IAAA,OAAO,EAAImB,WAAW,CAACN,OAHkB;AAIzC,IAAA,MAAM,EACF,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASM,WAAW,CAACC,IAAZ,CAAiBpB,QAAjB,CAA0B,CAA1B,CAAT,CALqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1C,CAHA,CAnBJ,CADJ;AAmCH,CAtED;;AAwEA,OAAO,MAAMqB,kBAAkB,GAAGhD,OAAO,CAACgD,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E;AACA,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAhD,EAAAA,KAAK,CAACmD,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBhD,IAAAA,KAAK,CAACmD,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAchD,QAAd,CAAuB;AACrBa,IAAAA,IAAI,EAAEjB;AADe,GAAvB;AAGA8C,EAAAA,OAAO,CAACM,KAAR,CAAchD,QAAd,CAAuBN,GAAvB;AACA,QAAMgD,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAZ+B,CAA3B;AAeP,eAAenD,IAAf","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport  Router, {useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useEffect } from \"react\";\nimport {FormOutlined} from '@ant-design/icons'\nimport { LOAD_CURPOST_REQUEST,REMOVE_POST_REQUEST } from \"../../reducers/post\";\nimport ReactHtmlParser from 'html-react-parser'\nimport { PageHeader, Tag, Comment, Avatar, Button} from 'antd';\nimport CommentForm from '../../components/CommentForm';\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user'\nimport moment from 'moment';\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nmoment.locale(\"ko\");\nconst Post = () => {\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const { id } = router.query;\n    const { currentPost,removePostDone , removePostLoading} = useSelector((state) => state.post);\n    const {me} = useSelector((state)=>state.user);\n    useEffect(()=>{\n        console.log(id);\n        if(id){\n            dispatch({\n                type : LOAD_CURPOST_REQUEST,\n                data : id,\n            })\n        }\n        \n    },[id])\n\n    useEffect(()=>{\n        if(removePostDone){\n            alert(\"해당 글이 삭제되었습니다\");\n            Router.push('/');\n        }\n    },[removePostDone])\n\n    const onClickDelete = useCallback(()=>{\n        const onemore = prompt(\"정말 삭제하시겠습니까? 삭제를 원하면 delete를 입력해주세요\");\n        if(onemore === \"delete\")\n        {\n            dispatch({\n               type : REMOVE_POST_REQUEST,\n               data : id,\n            })\n        }\n    },[]);\n\n    return (\n        <AppLayout>\n            {me && me.nickname === \"By_juun\" &&\n                <div style = {{textAlign : \"right\" , marginTop : \"15px\"}}>\n                    {me && me.email === \"neostgeart@gmail.com\" \n                    && <Button style = {{backgroundColor : \"lightblue\"}}><a  href = {`/UpdatePost/${id}`}>글 수정</a></Button>}\n                    {me && me.email === \"neostgeart@gmail.com\" \n                    && <Button style = {{backgroundColor : \"palevioletred\"}} onClick = {onClickDelete} loading = {removePostLoading}>글 삭제</Button>}\n                </div>\n            }\n            \n            {currentPost && <div style = {{textAlign : \"right\", marginRight : \"10px\", marginTop : \"20px\"}}>{moment(currentPost.createdAt).format('L')}</div>}\n            {currentPost && <h1 style = {{textAlign : \"center\", marginTop : \"30px\"}}>{currentPost.title}</h1>}\n            {currentPost && <PageHeader\n            className=\"site-page-header\"\n            tags = {<Tag color = \"blue\">{currentPost.category}</Tag>}\n            subTitle={currentPost.hashTag}\n            />}\n            <div style = {{marginLeft : \"15px\",marginRight : \"15px\",minHeight : \"700px\"}}>{currentPost && ReactHtmlParser(currentPost.content)}</div>\n            {me ? <CommentForm postId = {id}/> : <div style = {{textAlign : \"center\", marginTop : \"15px\",marginBottom : \"15px\", fontSize : \"20px\"}}><FormOutlined /><div>댓글을 작성하려면 로그인 해주세요</div></div>}\n            <div style = {{borderTop : \"0.5px solid lightsteelblue\" , marginTop : \"10px\", marginRight : \"15px\", marginLeft : \"15px\", marginBottom : \"15px\"}}>\n            {currentPost && currentPost.Comments \n            &&\n            currentPost.Comments.map((commentInfo) => <Comment key = {commentInfo.id}  \n             datetime = {moment(commentInfo.createdAt,\"YYYYMMDD\").format('L')}\n             author = {commentInfo.User.nickname} \n             content = {commentInfo.content} \n             avatar = {\n                 <Avatar>{commentInfo.User.nickname[0]}</Avatar>\n             }>\n             </Comment> )\n            }\n            </div>\n        </AppLayout>\n    )\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n  \n\nexport default Post;"]},"metadata":{},"sourceType":"module"}