{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/components/WritePostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useInput from '../hooks/useInput';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Button, Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, ADD_POST_REQUEST } from \"../reducers/post\";\nimport Router from 'next/router';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState } from 'draft-js';\nconst MyBlock = styled.div.withConfig({\n  displayName: \"WritePostForm__MyBlock\",\n  componentId: \"sc-1o1we0s-0\"\n})([\".wrapper-class{width:50%;margin:0 auto;margin-bottom:4rem;}.editor{height:500px !important;border:1px solid #f1f1f1 !important;padding:5px !important;border-radius:2px !important;}\"]);\nexport const Global = createGlobalStyle([\".ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margintop:15px;}.ck.ck-editor{margin-top:15px;}.ck-content{height:500px;}\"]);\nconst LoginButton = styled(Button).withConfig({\n  displayName: \"WritePostForm__LoginButton\",\n  componentId: \"sc-1o1we0s-1\"\n})([\"margin-right:10px;\"]);\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"WritePostForm__ButtonWrapper\",\n  componentId: \"sc-1o1we0s-2\"\n})([\"margin-top:10px;\"]);\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"WritePostForm__FormWrapper\",\n  componentId: \"sc-1o1we0s-3\"\n})([\"padding:10px;\"]);\n\nconst WritePostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    addPostLoading,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [title, onChangeTitle] = useInput('');\n  const {\n    0: category,\n    1: setCategory\n  } = useState('');\n  const [content, onChangeContent, setContent] = useInput('');\n  const [hashTag, onChangeHashtag] = useInput('');\n  const {\n    TextArea\n  } = Input;\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = editorState => {\n    // editorState에 값 설정\n    setEditorState(editorState);\n  };\n\n  const onSubmitForm = useCallback(() => {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        title,\n        category,\n        hashTag,\n        content\n      }\n    });\n    setTimeout(() => {\n      //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n      Router.push('/');\n    }, 1000);\n  }, [title, category, hashTag, content]);\n  const handleTeacherChange = useCallback(value => {\n    setCategory(value);\n  }, [category]);\n\n  const onChangeCKEditor = (event, editor) => {\n    const data = editor.getData();\n    setContent(data);\n  };\n\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"\\uC81C\\uBAA9\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), __jsx(TextArea, {\n    value: title,\n    onChange: onChangeTitle,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"belong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    onChange: handleTeacherChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(Select.Option, {\n    value: \"JavaScript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"JavaScript\"), __jsx(Select.Option, {\n    value: \"React\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"React\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"hashtag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"\\uD574\\uC2DC\\uD0DC\\uADF8\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), __jsx(TextArea, {\n    value: hashTag,\n    onChange: onChangeHashtag,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"\\uB0B4\\uC6A9\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p></p>\",\n    onChange: onChangeCKEditor,\n    config: {\n      ckfinder: {\n        uploadUrl: \"http://localhost:3085/uploads\"\n      }\n    },\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), __jsx(MyBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, __jsx(Editor // 에디터와 툴바 모두에 적용되는 클래스\n  , {\n    wrapperClassName: \"wrapper-class\" // 에디터 주변에 적용된 클래스\n    ,\n    editorClassName: \"editor\" // 툴바 주위에 적용된 클래스\n    ,\n    toolbarClassName: \"toolbar-class\" // 툴바 설정\n    ,\n    toolbar: {\n      // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n      list: {\n        inDropdown: true\n      },\n      textAlign: {\n        inDropdown: true\n      },\n      link: {\n        inDropdown: true\n      },\n      history: {\n        inDropdown: false\n      }\n    },\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\" // 한국어 설정\n    ,\n    localization: {\n      locale: 'ko'\n    } // 초기값 설정\n    ,\n    editorState: editorState // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n    ,\n    onEditorStateChange: onEditorStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }))), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, __jsx(LoginButton, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addPostLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"\\uB4F1\\uB85D\")));\n};\n\nexport default WritePostForm;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/WritePostForm.js"],"names":["React","useCallback","useEffect","useState","useInput","styled","createGlobalStyle","Button","Form","Input","Select","useDispatch","useSelector","addPost","ADD_POST_REQUEST","Router","CKEditor","ClassicEditor","Editor","EditorState","MyBlock","div","Global","LoginButton","ButtonWrapper","FormWrapper","WritePostForm","dispatch","addPostLoading","addPostDone","state","post","title","onChangeTitle","category","setCategory","content","onChangeContent","setContent","hashTag","onChangeHashtag","TextArea","editorState","setEditorState","createEmpty","onEditorStateChange","onSubmitForm","type","data","setTimeout","push","handleTeacherChange","value","onChangeCKEditor","event","editor","getData","width","ckfinder","uploadUrl","marginTop","list","inDropdown","textAlign","link","history","locale"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport useInput from '../hooks/useInput';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Button, Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, ADD_POST_REQUEST } from \"../reducers/post\";\nimport Router from 'next/router';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState } from 'draft-js';\n\n\nconst MyBlock = styled.div`\n    .wrapper-class{\n        width: 50%;\n        margin: 0 auto;\n        margin-bottom: 4rem;\n    }\n  .editor {\n    height: 500px !important;\n    border: 1px solid #f1f1f1 !important;\n    padding: 5px !important;\n    border-radius: 2px !important;\n  }\n`;\n\n\nexport const Global = createGlobalStyle`\n    .ck.ck-reset, .ck.ck-reset_all, .ck.ck-reset_all *{\n        margintop : 15px;\n    }\n    .ck.ck-editor {\n        margin-top : 15px;\n    }\n    .ck-content { \n        height : 500px;\n    }\n`;\n\nconst LoginButton = styled(Button)`\nmargin-right : 10px;\n`;\n\nconst ButtonWrapper = styled.div`\nmargin-top : 10px;\n`\nconst FormWrapper = styled(Form)`\npadding : 10px;\n`;\n\n\n\nconst WritePostForm = () => {\n    const dispatch = useDispatch();\n    const { addPostLoading, addPostDone } = useSelector((state) => state.post);\n    const [title, onChangeTitle] = useInput('');\n    const [category, setCategory] = useState('');\n    const [content, onChangeContent, setContent] = useInput('');\n    const [hashTag, onChangeHashtag] = useInput('');\n    const { TextArea } = Input;\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n    const onEditorStateChange = (editorState) => {\n      // editorState에 값 설정\n      setEditorState(editorState);\n    };\n\n    const onSubmitForm = useCallback(() => {\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                title, category, hashTag, content,\n            }\n        })\n        setTimeout(() => { //여기 나중에 res.redirect('/')이런식으로 바꿔줘야함.\n            Router.push('/');\n        }, 1000);\n    }, [title, category, hashTag, content]);\n\n    const handleTeacherChange = useCallback((value) => {\n        setCategory(value);\n    }, [category])\n    const onChangeCKEditor = (event, editor) => {\n        const data = editor.getData();\n        setContent(data);\n    }\n\n    return (\n\n        <FormWrapper onFinish={onSubmitForm}>\n            <Global />\n            <div>\n                <label htmlFor='title'>제목</label>\n                <br />\n                <TextArea value={title} onChange={onChangeTitle} style={{ width: \"100%\" }} />\n            </div>\n            <div>\n                <label htmlFor='belong'>카테고리</label>\n                <br />\n                <Select style={{ width: \"100%\" }} onChange={handleTeacherChange}>\n                    <Select.Option value=\"JavaScript\">JavaScript</Select.Option>\n                    <Select.Option value=\"React\">React</Select.Option>\n                </Select>\n            </div>\n            <div>\n                <label htmlFor='hashtag'>해시태그</label>\n                <br />\n                <TextArea value={hashTag} onChange={onChangeHashtag} style={{ width: \"100%\" }} />\n            </div>\n            <div>\n                <label htmlFor='content'>내용</label>\n                <br />\n                <CKEditor editor={ClassicEditor}\n                    data=\"<p></p>\"\n                    onChange={onChangeCKEditor}\n                    config={\n                        {\n                            ckfinder: {\n                                uploadUrl: \"http://localhost:3085/uploads\"\n                            },\n                        }\n                    }\n\n                    style={{ marginTop: \"10px\" }}>\n                </CKEditor>\n                <MyBlock>\n                    <Editor\n                        // 에디터와 툴바 모두에 적용되는 클래스\n                        wrapperClassName=\"wrapper-class\"\n                        // 에디터 주변에 적용된 클래스\n                        editorClassName=\"editor\"\n                        // 툴바 주위에 적용된 클래스\n                        toolbarClassName=\"toolbar-class\"\n                        // 툴바 설정\n                        toolbar={{\n                            // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n                            list: { inDropdown: true },\n                            textAlign: { inDropdown: true },\n                            link: { inDropdown: true },\n                            history: { inDropdown: false },\n                        }}\n                        placeholder=\"내용을 작성해주세요.\"\n                        // 한국어 설정\n                        localization={{\n                            locale: 'ko',\n                        }}\n                        // 초기값 설정\n                        editorState={editorState}\n                        // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n                        onEditorStateChange={onEditorStateChange}\n                    />\n                </MyBlock>\n            </div>\n            <ButtonWrapper>\n                <LoginButton type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={addPostLoading}>등록</LoginButton>\n            </ButtonWrapper>\n\n        </FormWrapper>\n\n    );\n}\n\nexport default WritePostForm;"]},"metadata":{},"sourceType":"module"}