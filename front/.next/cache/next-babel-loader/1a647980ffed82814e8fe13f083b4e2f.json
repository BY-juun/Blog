{"ast":null,"code":"import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction kakaologInAPI(data) {\n  return axios.get('/user/kakao');\n}\n\nfunction* kakaologIn(action) {\n  try {\n    yield call(kakaologInAPI);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  console.log(\"dd\");\n\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchKaKaoLogIn() {\n  yield takeLatest(KAKAO_LOG_IN_REQUEST, kakaologIn);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  console.log(\"watch sign up\");\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchSignUp), fork(watchKaKaoLogIn), fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","axios","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","kakaologInAPI","data","get","kakaologIn","action","err","console","error","logInAPI","post","logIn","result","type","response","logOutAPI","logOut","signUpAPI","signUp","log","watchKaKaoLogIn","KAKAO_LOG_IN_REQUEST","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n} from '../reducers/user';\n\n\nfunction kakaologInAPI(data) {\n  return axios.get('/user/kakao');\n}\n\n\nfunction* kakaologIn(action) {\n  try {\n    yield call(kakaologInAPI);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI,action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup',data);\n}\n\nfunction* signUp(action) {\n    console.log(\"dd\");\n  try {\n    const result = yield call(signUpAPI,action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchKaKaoLogIn() {\n  yield takeLatest(KAKAO_LOG_IN_REQUEST, kakaologIn);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  console.log(\"watch sign up\");\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchSignUp),\n    fork(watchKaKaoLogIn),\n    fork(watchLogIn),\n    fork(watchLogOut),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}