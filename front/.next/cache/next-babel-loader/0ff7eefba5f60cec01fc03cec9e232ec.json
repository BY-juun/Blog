{"ast":null,"code":"var __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport { SEARCH_POSTS_REQUEST } from '../../reducers/post';\nimport { Pagination } from 'antd';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport ListComponent from \"../../components/ListComponent\";\n\nconst keyword = () => {\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(1);\n  const {\n    Posts\n  } = useSelector(state => state.post);\n  console.log(\"posts : \", Posts);\n  let startIndex = 0;\n  let lastIndex = 10;\n  const {\n    0: showPosts,\n    1: setShowPosts\n  } = useState(Posts.slice(startIndex, lastIndex));\n  const router = useRouter();\n  const {\n    keyword\n  } = router.query;\n  const onChange = useCallback(page => {\n    setCurrent(page);\n    console.log(current);\n    startIndex = (page - 1) * 10;\n    lastIndex = startIndex + 10;\n    setShowPosts(Posts.slice(startIndex, lastIndex));\n  }, [current, showPosts]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, keyword, \"\\uAC80\\uC0C9\")), __jsx(AppLayout, null, __jsx(\"h1\", {\n    style: {\n      marginTop: \"45px\",\n      textAlign: \"center\"\n    }\n  }, \"Search \", keyword), __jsx(ListComponent, {\n    Posts: showPosts\n  }), __jsx(Pagination, {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\",\n      marginBottom: \"15px\"\n    },\n    current: current,\n    onChange: onChange,\n    total: Posts.length + 10\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: SEARCH_POSTS_REQUEST,\n    data: context.params.keyword\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default keyword;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/SearchPost/[keyword].js"],"names":["AppLayout","useRouter","useSelector","React","useCallback","useState","Head","SEARCH_POSTS_REQUEST","Pagination","LOAD_MY_INFO_REQUEST","wrapper","END","axios","ListComponent","keyword","current","setCurrent","Posts","state","post","console","log","startIndex","lastIndex","showPosts","setShowPosts","slice","router","query","onChange","page","marginTop","textAlign","marginBottom","length","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAASC;AAAT,MAAuBX,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM;AAACY,IAAAA;AAAD,MAAUf,WAAW,CAAEgB,KAAD,IAAUA,KAAK,CAACC,IAAjB,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,KAAxB;AACA,MAAIK,UAAU,GAAG,CAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BpB,QAAQ,CAACY,KAAK,CAACS,KAAN,CAAYJ,UAAZ,EAAuBC,SAAvB,CAAD,CAA1C;AACA,QAAMI,MAAM,GAAG1B,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAca,MAAM,CAACC,KAA3B;AAEA,QAAMC,QAAQ,GAAGzB,WAAW,CAAC0B,IAAI,IAAI;AACjCd,IAAAA,UAAU,CAACc,IAAD,CAAV;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAO,IAAAA,UAAU,GAAG,CAACQ,IAAI,GAAC,CAAN,IAAW,EAAxB;AACAP,IAAAA,SAAS,GAAGD,UAAU,GAAG,EAAzB;AACAG,IAAAA,YAAY,CAACR,KAAK,CAACS,KAAN,CAAYJ,UAAZ,EAAuBC,SAAvB,CAAD,CAAZ;AACH,GAN2B,EAM1B,CAACR,OAAD,EAASS,SAAT,CAN0B,CAA5B;AASA,SACI,4BACI,MAAC,IAAD,QACI,qBAAQV,OAAR,iBADJ,CADJ,EAII,MAAC,SAAD,QACI;AAAI,IAAA,KAAK,EAAI;AAACiB,MAAAA,SAAS,EAAG,MAAb;AAAoBC,MAAAA,SAAS,EAAG;AAAhC;AAAb,gBAAgElB,OAAhE,CADJ,EAEI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAIU;AAAxB,IAFJ,EAGI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAI;AAACQ,MAAAA,SAAS,EAAG,QAAb;AAAuBD,MAAAA,SAAS,EAAG,MAAnC;AAA2CE,MAAAA,YAAY,EAAG;AAA1D,KAArB;AAAwF,IAAA,OAAO,EAAElB,OAAjG;AAA0G,IAAA,QAAQ,EAAEc,QAApH;AAA8H,IAAA,KAAK,EAAEZ,KAAK,CAACiB,MAAN,GAAa;AAAlJ,IAHJ,CAJJ,CADJ;AAYH,CA/BD;;AAiCA,OAAO,MAAMC,kBAAkB,GAAGzB,OAAO,CAACyB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E;AACA,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAzB,EAAAA,KAAK,CAAC4B,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBzB,IAAAA,KAAK,CAAC4B,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEnC;AADe,GAAvB;AAGA2B,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAGrC,oBADY;AAEnBsC,IAAAA,IAAI,EAAET,OAAO,CAACU,MAAR,CAAehC;AAFF,GAAvB;AAIAsB,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBhC,GAAvB;AACA,QAAMyB,OAAO,CAACM,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAhB+B,CAA3B;AAmBP,eAAelC,OAAf","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport {SEARCH_POSTS_REQUEST} from '../../reducers/post'\nimport { Pagination } from 'antd';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user'\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport ListComponent from \"../../components/ListComponent\";\n\nconst keyword = () => {\n    const [current,setCurrent] = useState(1);\n    const {Posts} = useSelector((state)=>(state.post));\n    console.log(\"posts : \", Posts);\n    let startIndex = 0; \n    let lastIndex = 10;\n    const [showPosts, setShowPosts] = useState(Posts.slice(startIndex,lastIndex));\n    const router = useRouter();\n    const { keyword } = router.query;\n\n    const onChange = useCallback(page => {\n        setCurrent(page);\n        console.log(current);\n        startIndex = (page-1) * 10;\n        lastIndex = startIndex + 10;\n        setShowPosts(Posts.slice(startIndex,lastIndex));\n    },[current,showPosts]);\n    \n\n    return (\n        <>\n            <Head>\n                <title>{keyword}검색</title>\n            </Head>\n            <AppLayout>\n                <h1 style = {{marginTop : \"45px\",textAlign : \"center\"}}>Search {keyword}</h1>\n                <ListComponent Posts = {showPosts}/>\n                <Pagination style = {{textAlign : \"center\", marginTop : \"20px\", marginBottom : \"15px\"}} current={current} onChange={onChange} total={Posts.length+10} />\n            </AppLayout>\n        </> \n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch({\n        type : SEARCH_POSTS_REQUEST,\n        data: context.params.keyword,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n  \n\nexport default keyword;"]},"metadata":{},"sourceType":"module"}