{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/components/CommentForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\n\nconst CommentForm = ({\n  postId\n}) => {\n  const [comment, onChangeComment, setComment] = useInput('');\n  const onSubmitComment = useCallback(() => {}, [comment]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"\\uB313\\uAE00\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    onChange: onChangeComment,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  })), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"\\uC785\\uB825\")));\n};\n\nCommentForm.prototype = {\n  postId: PropTypes.number.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/CommentForm.js"],"names":["PropTypes","Form","Input","Button","Link","useCallback","useInput","CommentForm","postId","comment","onChangeComment","setComment","onSubmitComment","email","prototype","number","isRequired"],"mappings":";;;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAE9B,QAAM,CAACC,OAAD,EAAUC,eAAV,EAA2BC,UAA3B,IAAyCL,QAAQ,CAAC,EAAD,CAAvD;AAEA,QAAMM,eAAe,GAAGP,WAAW,CAAC,MAAI,CAEvC,CAFkC,EAEjC,CAACI,OAAD,CAFiC,CAAnC;AAGA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEG,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,IAAI,EAAC,OAA9B;AAAsC,IAAA,KAAK,EAAEC,KAA7C;AAAoD,IAAA,QAAQ,EAAEH,eAA9D;AAA+E,IAAA,QAAQ,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADA,EAMA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANA,CADJ;AAYH,CAnBD;;AAqBAH,WAAW,CAACO,SAAZ,GAAwB;AACpBN,EAAAA,MAAM,EAAGR,SAAS,CAACe,MAAV,CAAiBC;AADN,CAAxB;AAIA,eAAeT,WAAf","sourcesContent":["\nimport PropTypes from 'prop-types';\nimport {Form, Input, Button} from 'antd';\nimport Link from 'next/link';\nimport { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nconst CommentForm = ({postId}) => {\n\n    const [comment, onChangeComment, setComment] = useInput('');\n\n    const onSubmitComment = useCallback(()=>{\n\n    },[comment]);\n    return(\n        <Form onFinish={onSubmitComment}>\n        <div>\n          <label htmlFor=\"user-email\">댓글</label>\n          <br />\n          <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeComment} required />\n        </div>\n        <Button>\n          <Button type=\"primary\" htmlType=\"submit\" >입력</Button>\n        </Button>\n      </Form>\n    );\n};\n\nCommentForm.prototype = {\n    postId : PropTypes.number.isRequired\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}