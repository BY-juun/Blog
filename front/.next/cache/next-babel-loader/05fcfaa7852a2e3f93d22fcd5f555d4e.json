{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n  Posts: [{\n    id: 1,\n    title: \"JavaScript 첫번째 게시글입니다\",\n    hashTag: \"#js #JavaScript #test #dummydata\",\n    content: \"첫번째 게시글!\",\n    category: \"JavaScript\",\n    createdAt: \"2017-06-13\"\n  }, {\n    id: 2,\n    title: \"React 첫번째 게시글입니다!\",\n    hashTag: \"#React #react #test #dummydata\",\n    content: \"두번째 게시글!\",\n    category: \"React\",\n    createdAt: \"2018-06-20\"\n  }, {\n    id: 3,\n    title: \"TypeScript 첫번째 게시글입니당\",\n    hashTag: \"#Ts #TypeScript #test #dummydata\",\n    content: \"세번째 게시글!\",\n    category: \"TypeScript\",\n    createdAt: \"2019-04-22\"\n  }, {\n    id: 4,\n    title: \"JavaScript 두번째 게시글입니다\",\n    hashTag: \"#js #JavaScript #test2 #dummydata22222\",\n    content: \"첫번째 게시글!\",\n    category: \"JavaScript\",\n    createdAt: \"2017-06-13\"\n  }, {\n    id: 5,\n    title: \"React 두번째 게시글입니다!\",\n    hashTag: \"#React2 #react2222 #test3232323 #dummydata\",\n    content: \"두번째 게시글!\",\n    category: \"React\",\n    createdAt: \"2018-06-20\"\n  }, {\n    id: 6,\n    title: \"TypeScript 두번째 게시글입니당\",\n    hashTag: \"#js #JavaScript #test #dummydata\",\n    content: \"세번째 게시글!\",\n    category: \"TypeScript\",\n    createdAt: \"2019-04-22\"\n  }],\n  currentPost: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const removePost = {\n  type: REMOVE_POST_REQUEST\n};\nexport const updatePost = {\n  type: UPDATE_POST_REQUEST\n};\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = false;\n      break;\n\n    case ADD_POST_SUCCESS:\n      {\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        console.log(action.data);\n        draft.Posts.unshift(action.data);\n        break;\n      }\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = false;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.Posts = draft.Posts.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case UPDATE_POST_REQUEST:\n      draft.updatePostLoading = true;\n      draft.updatePostDone = false;\n      draft.updatePostError = false;\n      break;\n\n    case UPDATE_POST_SUCCESS:\n      draft.updatePostLoading = false;\n      draft.updatePostDone = true;\n      draft.Posts = draft.Posts.filter(v => v.id !== action.data);\n      break;\n\n    case UPDATE_POST_FAILURE:\n      draft.updatePostLoading = false;\n      draft.updatePostError = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = false;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.Posts = action.data.concat(draft.Posts);\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPsostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/reducers/post.js"],"names":["shortId","faker","produce","initialState","Posts","id","title","hashTag","content","category","createdAt","currentPost","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","updatePostLoading","updatePostDone","updatePostError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","addPost","data","type","removePost","updatePost","reducer","state","action","draft","console","log","unshift","error","filter","v","loadPostLoading","loadPostDone","loadPostError","concat","loadPsostLoading"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n    Posts:\n        [\n            {\n                id: 1,\n                title: \"JavaScript 첫번째 게시글입니다\",\n                hashTag: \"#js #JavaScript #test #dummydata\",\n                content: \"첫번째 게시글!\",\n                category: \"JavaScript\",\n                createdAt: \"2017-06-13\"\n            }\n            ,\n            {\n                id: 2,\n                title: \"React 첫번째 게시글입니다!\",\n                hashTag: \"#React #react #test #dummydata\",\n                content: \"두번째 게시글!\",\n                category: \"React\",\n                createdAt: \"2018-06-20\"\n            },\n            {\n                id: 3,\n                title: \"TypeScript 첫번째 게시글입니당\",\n                hashTag: \"#Ts #TypeScript #test #dummydata\",\n                content: \"세번째 게시글!\",\n                category: \"TypeScript\",\n                createdAt: \"2019-04-22\"\n            },\n            {\n                id: 4,\n                title: \"JavaScript 두번째 게시글입니다\",\n                hashTag: \"#js #JavaScript #test2 #dummydata22222\",\n                content: \"첫번째 게시글!\",\n                category: \"JavaScript\",\n                createdAt: \"2017-06-13\"\n            }\n            ,\n            {\n                id: 5,\n                title: \"React 두번째 게시글입니다!\",\n                hashTag: \"#React2 #react2222 #test3232323 #dummydata\",\n                content: \"두번째 게시글!\",\n                category: \"React\",\n                createdAt: \"2018-06-20\"\n            },\n            {\n                id: 6,\n                title: \"TypeScript 두번째 게시글입니당\",\n                hashTag: \"#js #JavaScript #test #dummydata\",\n                content: \"세번째 게시글!\",\n                category: \"TypeScript\",\n                createdAt: \"2019-04-22\"\n            }\n        ],\n    currentPost: null,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    updatePostLoading: false,\n    updatePostDone: false,\n    updatePostError: null,\n}\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\n\nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data,\n});\n\n\nexport const removePost = {\n    type: REMOVE_POST_REQUEST\n};\n\n\n\nexport const updatePost = {\n    type: UPDATE_POST_REQUEST\n};\n\nconst reducer = (state = initialState, action) =>\n    produce(state, (draft) => {\n        switch (action.type) {\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = false;\n                break;\n            case ADD_POST_SUCCESS:\n                {\n                    draft.addPostLoading= false;\n                    draft.addPostDone= true;\n                    console.log(action.data);\n                    draft.Posts.unshift(action.data);\n                    break;\n                }\n               \n            case ADD_POST_FAILURE:\n                draft.addPostLoading= false;\n                draft.addPostError= action.error;\n                break;\n            case REMOVE_POST_REQUEST:\n                draft.removePostLoading = true;\n                draft.removePostDone = false;\n                draft.removePostError = false;\n                break;\n            case REMOVE_POST_SUCCESS:\n                draft.removePostLoading = false;\n                draft.removePostDone = true;\n                draft.Posts = draft.Posts.filter((v)=>v.id!==action.data);\n                break;\n            case REMOVE_POST_FAILURE:\n                draft.removePostLoading= false;\n                draft.removePostError= action.error;\n                break;\n\n            case UPDATE_POST_REQUEST:\n                draft.updatePostLoading = true;\n                draft.updatePostDone = false;\n                draft.updatePostError = false;\n                break;\n            case UPDATE_POST_SUCCESS:\n                draft.updatePostLoading = false;\n                draft.updatePostDone = true;\n                draft.Posts = draft.Posts.filter((v)=>v.id!==action.data);\n                break;\n            case UPDATE_POST_FAILURE:\n                draft.updatePostLoading= false;\n                draft.updatePostError= action.error;\n                break;\n\n            case LOAD_POSTS_REQUEST:\n                draft.loadPostLoading = true;\n                draft.loadPostDone = false;\n                draft.loadPostError = false;\n                break;\n            case LOAD_POSTS_SUCCESS:\n                draft.loadPostLoading = false;\n                draft.loadPostDone = true;\n                draft.Posts = action.data.concat(draft.Posts);\n                break;\n            case LOAD_POSTS_FAILURE:\n                draft.loadPsostLoading= false;\n                draft.loadPostError= action.error;\n                break;\n            default:\n                break;\n        }\n    });\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}