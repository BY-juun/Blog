{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/pages/category/[category].js\";\nvar __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { useEffect } from \"react\";\nimport PostCard from '../../components/PostCard';\nimport { LOAD_CATEGORYPOSTS_REQUEST } from '../../reducers/post';\nimport { Pagination } from 'antd'; //More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nconst category = () => {\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(3);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    category\n  } = router.query;\n  const {\n    Posts\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (category) {\n      dispatch({\n        type: LOAD_CATEGORYPOSTS_REQUEST,\n        data: category\n      });\n    }\n  }, [category]);\n\n  const onChange = page => {\n    setCurrent(page);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, category)), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, Posts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    style: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  })), __jsx(Pagination, {\n    current: this.state.current,\n    onChange: onChange,\n    total: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), \";\"));\n};\n\nexport default category;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/category/[category].js"],"names":["AppLayout","useRouter","useDispatch","useSelector","React","useState","Head","useEffect","PostCard","LOAD_CATEGORYPOSTS_REQUEST","Pagination","category","current","setCurrent","router","dispatch","query","Posts","state","post","type","data","onChange","page","map","id"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,0BAAR,QAAyC,qBAAzC;AACA,SAASC,UAAT,QAA2B,MAA3B,C,CACA;AACA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAA,OAACC,OAAD;AAAA,OAASC;AAAT,MAAuBR,QAAQ,CAAC,CAAD,CAArC;AACA,QAAMS,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeG,MAAM,CAACE,KAA5B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUd,WAAW,CAAEe,KAAD,IAAUA,KAAK,CAACC,IAAjB,CAA3B;AACAZ,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGI,QAAH,EAAY;AACRI,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAGX,0BADF;AAELY,QAAAA,IAAI,EAAGV;AAFF,OAAD,CAAR;AAIH;AACJ,GAPQ,EAOP,CAACA,QAAD,CAPO,CAAT;;AASA,QAAMW,QAAQ,GAAGC,IAAI,IAAI;AACrBV,IAAAA,UAAU,CAACU,IAAD,CAAV;AACD,GAFH;;AAIA,SAEI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQZ,QAAR,CADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,KAAK,CAACO,GAAN,CAAWL,IAAD,IAAS,MAAC,QAAD;AAAW,IAAA,GAAG,EAAIA,IAAI,CAACM,EAAvB;AAA2B,IAAA,IAAI,EAAIN,IAAnC;AAAyC,IAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CADL,EAEI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,KAAKD,KAAL,CAAWN,OAAhC;AAAyC,IAAA,QAAQ,EAAEU,QAAnD;AAA6D,IAAA,KAAK,EAAE,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,MAJJ,CAFJ;AAYH,CA/BD;;AAiCA,eAAeX,QAAf","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { useEffect } from \"react\";\nimport PostCard from '../../components/PostCard';\nimport {LOAD_CATEGORYPOSTS_REQUEST} from '../../reducers/post'\nimport { Pagination } from 'antd';\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\nconst category = () => {\n    const [current,setCurrent] = useState(3);\n    const router = useRouter();\n    const dispatch = useDispatch();\n    const { category } = router.query;\n    const {Posts} = useSelector((state)=>(state.post));\n    useEffect(()=>{\n        if(category){\n            dispatch({\n                type : LOAD_CATEGORYPOSTS_REQUEST,\n                data : category,\n            })\n        }\n    },[category])\n\n    const onChange = page => {\n        setCurrent(page);\n      };\n    \n    return (\n        \n        <>\n            <Head>\n                <title>{category}</title>\n            </Head>\n            <AppLayout>\n                {Posts.map((post)=> <PostCard  key = {post.id} post = {post} style/>)}\n                <Pagination current={this.state.current} onChange={onChange} total={50} />;\n            </AppLayout>\n        </>\n    );\n};\n\nexport default category;"]},"metadata":{},"sourceType":"module"}