{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/pages/category/[category].js\";\nvar __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport PostCard from '../../components/PostCard';\nimport { LOAD_CATEGORYPOSTS_REQUEST } from '../../reducers/post';\nimport { Pagination } from 'antd';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'; //More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nconst category = () => {\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(1);\n  const {\n    Posts\n  } = useSelector(state => state.post);\n  let startIndex = 0;\n  let lastIndex = 5;\n  const {\n    0: showPosts,\n    1: setShowPosts\n  } = useState(Posts.slice(startIndex, lastIndex));\n  const router = useRouter();\n  const {\n    category\n  } = router.query;\n  const onChange = useCallback(page => {\n    setCurrent(page);\n    startIndex = (current - 1) * 5;\n    lastIndex = startIndex + 5;\n    setShowPosts(Posts.slice(startIndex, lastIndex));\n    console.log(showPosts);\n  }, [current]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, category)), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, showPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    style: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 41\n    }\n  })), __jsx(Pagination, {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    current: current,\n    onChange: onChange,\n    total: Posts.length * 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_CATEGORYPOSTS_REQUEST,\n    data: context.params.category\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default category;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/category/[category].js"],"names":["AppLayout","useRouter","useDispatch","useSelector","React","useCallback","useEffect","useState","Head","PostCard","LOAD_CATEGORYPOSTS_REQUEST","Pagination","LOAD_MY_INFO_REQUEST","wrapper","END","axios","category","current","setCurrent","Posts","state","post","startIndex","lastIndex","showPosts","setShowPosts","slice","router","query","onChange","page","console","log","map","id","textAlign","marginTop","length","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport PostCard from '../../components/PostCard';\nimport {LOAD_CATEGORYPOSTS_REQUEST} from '../../reducers/post'\nimport { Pagination } from 'antd';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user'\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\n\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\nconst category = () => {\n    const [current,setCurrent] = useState(1);\n    const {Posts} = useSelector((state)=>(state.post));\n    let startIndex = 0; \n    let lastIndex = 5;\n    const [showPosts, setShowPosts] = useState(Posts.slice(startIndex,lastIndex));\n    const router = useRouter();\n    const { category } = router.query;\n\n    const onChange = useCallback(page => {\n        setCurrent(page);\n        startIndex = (current-1) * 5;\n        lastIndex = startIndex + 5;\n        setShowPosts(Posts.slice(startIndex,lastIndex));\n        console.log(showPosts);\n    },[current]);\n    \n\n    return (\n        <>\n            <Head>\n                <title>{category}</title>\n            </Head>\n            <AppLayout>\n                {showPosts.map((post)=> <PostCard  key = {post.id} post = {post} style/>)}\n                <Pagination style = {{textAlign : \"center\", marginTop : \"20px\"}} current={current} onChange={onChange} total={Posts.length*2} />\n            </AppLayout>\n        </> \n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch({\n        type : LOAD_CATEGORYPOSTS_REQUEST,\n        data: context.params.category,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n  \n\nexport default category;"]},"metadata":{},"sourceType":"module"}