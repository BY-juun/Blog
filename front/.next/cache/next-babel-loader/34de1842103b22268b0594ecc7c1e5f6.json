{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector } from 'react-redux';\nimport { createGlobalStyle } from \"styled-components\";\nimport { Pagination } from 'antd';\nimport ListComponent from '../components/ListComponent';\nexport var __N_SSP = true;\nexport var Global = createGlobalStyle([\".ant-pagination-options{display:none;}\"]);\n\nvar Home = function Home() {\n  //const [current,setCurrent] = useState(1);\n  //const [startIndex, setStartIndex] = useState(0);\n  //const [lastIndex, setLastIndex] = useState(11);\n  //const totalPosts = useSelector((state)=>(state.post.Posts));\n  var Posts = useSelector(function (state) {\n    return state.post.Posts.slice(0, 11);\n  }); //const onChange = useCallback((page) => {\n  //setCurrent(page);\n  //setStartIndex((page-1)*11);\n  //setLastIndex(startIndex + 11);\n  // Posts = useSelector((state) => (state.post.Posts.slice(startIndex,lastIndex)));\n  //},[current,]);\n\n  return __jsx(AppLayout, null, __jsx(ListComponent, {\n    Posts: Posts\n  }), __jsx(\"div\", {\n    style: {\n      marginBottom: \"15px\"\n    }\n  }), __jsx(Global, null));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/index.js"],"names":["React","useState","useCallback","AppLayout","useSelector","createGlobalStyle","Pagination","ListComponent","Global","Home","Posts","state","post","slice","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,WAAvB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA2B,aAA3B;AAMA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,OAAO,IAAMC,MAAM,GAAGH,iBAAH,4CAAZ;;AAMP,IAAMI,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAYA,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAiBG,KAAjB,CAAuB,CAAvB,EAAyB,EAAzB,CAAZ;AAAA,GAAD,CAAzB,CANiB,CAQjB;AACE;AACA;AACA;AACD;AACH;;AAEE,SACE,MAAC,SAAD,QACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAIH;AAAxB,IADF,EAEE;AAAK,IAAA,KAAK,EAAI;AAACI,MAAAA,YAAY,EAAG;AAAhB;AAAd,IAFF,EAGE,MAAC,MAAD,OAHF,CADF;AAQD,CAvBD;;AAyCA,eAAeL,IAAf","sourcesContent":["import React,{useState,useCallback} from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector} from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user'\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport { createGlobalStyle } from \"styled-components\";\nimport { Pagination } from 'antd';\nimport ListComponent from '../components/ListComponent';\n\nexport const Global = createGlobalStyle`\n    .ant-pagination-options{\n        display : none;\n    }\n`;\n\nconst Home = () => {\n  \n  //const [current,setCurrent] = useState(1);\n  //const [startIndex, setStartIndex] = useState(0);\n  //const [lastIndex, setLastIndex] = useState(11);\n  //const totalPosts = useSelector((state)=>(state.post.Posts));\n  const Posts = useSelector((state) => (state.post.Posts.slice(0,11)));\n\n  //const onChange = useCallback((page) => {\n    //setCurrent(page);\n    //setStartIndex((page-1)*11);\n    //setLastIndex(startIndex + 11);\n   // Posts = useSelector((state) => (state.post.Posts.slice(startIndex,lastIndex)));\n//},[current,]);\n\n  return (\n    <AppLayout>\n      <ListComponent Posts = {Posts}/>\n      <div style = {{marginBottom : \"15px\"}}></div>\n      <Global />\n      {/*<Pagination style = {{textAlign : \"center\", marginTop : \"20px\", marginBottom : \"15px\"}} current={current} onChange={onChange} total={totalPosts.length-(totalPosts.length % 10)} />*/}\n    </AppLayout>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  })\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}