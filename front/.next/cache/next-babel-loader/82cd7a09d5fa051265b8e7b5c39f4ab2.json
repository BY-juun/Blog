{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  Posts: [],\n  currentPost: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadCategorypostsLoading: false,\n  loadCategorypostsDone: false,\n  loadCategorypostsError: null,\n  loadCurpostLoading: false,\n  loadCurpostDone: false,\n  loadCurpostError: null,\n  searchPostsLoading: false,\n  searchPostsDone: false,\n  searchPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null\n};\nexport const LOAD_CURPOST_REQUEST = 'LOAD_CURPOST_REQUEST';\nexport const LOAD_CURPOST_SUCCESS = 'LOAD_CURPOST_SUCCESS';\nexport const LOAD_CURPOST_FAILURE = 'LOAD_CURPOST_FAILURE';\nexport const LOAD_CATEGORYPOSTS_REQUEST = 'LOAD_CATEGORYPOSTS_REQUEST';\nexport const LOAD_CATEGORYPOSTS_SUCCESS = 'LOAD_CATEGORYPOSTS_SUCCESS';\nexport const LOAD_CATEGORYPOSTS_FAILURE = 'LOAD_CATEGORYPOSTS_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const SEARCH_POSTS_REQUEST = 'SEARCH_POSTS_REQUEST';\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\nexport const SEARCH_POSTS_FAILURE = 'SEARCH_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = false;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.Posts.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        draft.currentPost.Comments = draft.currentPost.Comments.concat(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = false;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.Posts = draft.Posts.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case UPDATE_POST_REQUEST:\n      draft.updatePostLoading = true;\n      draft.updatePostDone = false;\n      draft.updatePostError = false;\n      break;\n\n    case UPDATE_POST_SUCCESS:\n      draft.updatePostLoading = false;\n      draft.updatePostDone = action.data.message;\n      break;\n\n    case UPDATE_POST_FAILURE:\n      draft.updatePostLoading = false;\n      draft.updatePostError = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = false;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.Posts = action.data.concat(draft.Posts);\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case SEARCH_POSTS_REQUEST:\n      draft.searchPostsLoading = true;\n      draft.searchPostDone = false;\n      draft.searchPostError = false;\n      break;\n\n    case SEARCH_POSTS_SUCCESS:\n      draft.searchPostsLoading = false;\n      draft.searchPostsDone = true;\n      draft.Posts = action.data.concat(draft.Posts);\n      break;\n\n    case SEARCH_POSTS_FAILURE:\n      draft.searchPostsLoading = false;\n      draft.searchPostsError = action.error;\n      break;\n\n    case LOAD_CURPOST_REQUEST:\n      draft.loadCurpostLoading = true;\n      draft.loadCurpostDone = false;\n      draft.loadCurpostError = false;\n      break;\n\n    case LOAD_CURPOST_SUCCESS:\n      draft.loadCurpostLoading = false;\n      draft.loadCurpostDone = true;\n      draft.currentPost = action.data;\n      break;\n\n    case LOAD_CURPOST_FAILURE:\n      draft.loadPCurpostLoading = false;\n      draft.loadCurpostError = action.error;\n      break;\n\n    case LOAD_CATEGORYPOSTS_REQUEST:\n      draft.loadCatorypostLoading = true;\n      draft.loadCatorypostDone = false;\n      draft.loadCatorypostError = false;\n      break;\n\n    case LOAD_CATEGORYPOSTS_SUCCESS:\n      draft.loadCatorypostLoading = false;\n      draft.loadCatorypostDone = true;\n      draft.Posts = action.data.concat(draft.Posts);\n      break;\n\n    case LOAD_CATEGORYPOSTS_FAILURE:\n      draft.loadPCatorypostLoading = false;\n      draft.loadCatorypostError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/reducers/post.js"],"names":["produce","initialState","Posts","currentPost","loadPostsLoading","loadPostsDone","loadPostsError","loadCategorypostsLoading","loadCategorypostsDone","loadCategorypostsError","loadCurpostLoading","loadCurpostDone","loadCurpostError","searchPostsLoading","searchPostsDone","searchPostsError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","updatePostLoading","updatePostDone","updatePostError","LOAD_CURPOST_REQUEST","LOAD_CURPOST_SUCCESS","LOAD_CURPOST_FAILURE","LOAD_CATEGORYPOSTS_REQUEST","LOAD_CATEGORYPOSTS_SUCCESS","LOAD_CATEGORYPOSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","SEARCH_POSTS_REQUEST","SEARCH_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","reducer","state","action","draft","type","unshift","data","error","Comments","concat","filter","v","id","message","loadPostLoading","loadPostDone","loadPostError","searchPostDone","searchPostError","loadPCurpostLoading","loadCatorypostLoading","loadCatorypostDone","loadCatorypostError","loadPCatorypostLoading"],"mappings":"AACA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,WAAW,EAAE,IAFW;AAGxBC,EAAAA,gBAAgB,EAAE,KAHM;AAIxBC,EAAAA,aAAa,EAAE,KAJS;AAKxBC,EAAAA,cAAc,EAAE,IALQ;AAMxBC,EAAAA,wBAAwB,EAAE,KANF;AAOxBC,EAAAA,qBAAqB,EAAE,KAPC;AAQxBC,EAAAA,sBAAsB,EAAE,IARA;AASxBC,EAAAA,kBAAkB,EAAE,KATI;AAUxBC,EAAAA,eAAe,EAAE,KAVO;AAWxBC,EAAAA,gBAAgB,EAAE,IAXM;AAYxBC,EAAAA,kBAAkB,EAAE,KAZI;AAaxBC,EAAAA,eAAe,EAAE,KAbO;AAcxBC,EAAAA,gBAAgB,EAAE,IAdM;AAexBC,EAAAA,cAAc,EAAE,KAfQ;AAgBxBC,EAAAA,WAAW,EAAE,KAhBW;AAiBxBC,EAAAA,YAAY,EAAE,IAjBU;AAkBxBC,EAAAA,iBAAiB,EAAE,KAlBK;AAmBxBC,EAAAA,cAAc,EAAE,KAnBQ;AAoBxBC,EAAAA,eAAe,EAAE,IApBO;AAqBxBC,EAAAA,iBAAiB,EAAE,KArBK;AAsBxBC,EAAAA,cAAc,EAAE,KAtBQ;AAuBxBC,EAAAA,eAAe,EAAE,IAvBO;AAwBxBC,EAAAA,iBAAiB,EAAE,KAxBK;AAyBxBC,EAAAA,cAAc,EAAE,KAzBQ;AA0BxBC,EAAAA,eAAe,EAAE;AA1BO,CAArB;AA6BP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;;AAIP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGpD,YAAT,EAAuBqD,MAAvB,KACZtD,OAAO,CAACqD,KAAD,EAASE,KAAD,IAAW;AACtB,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKhB,gBAAL;AACIe,MAAAA,KAAK,CAACvC,cAAN,GAAuB,IAAvB;AACAuC,MAAAA,KAAK,CAACtC,WAAN,GAAoB,KAApB;AACAsC,MAAAA,KAAK,CAACrC,YAAN,GAAqB,KAArB;AACA;;AACJ,SAAKuB,gBAAL;AACIc,MAAAA,KAAK,CAACvC,cAAN,GAAuB,KAAvB;AACAuC,MAAAA,KAAK,CAACtC,WAAN,GAAoB,IAApB;AACAsC,MAAAA,KAAK,CAACrD,KAAN,CAAYuD,OAAZ,CAAoBH,MAAM,CAACI,IAA3B;AACA;;AACJ,SAAKhB,gBAAL;AACIa,MAAAA,KAAK,CAACvC,cAAN,GAAuB,KAAvB;AACAuC,MAAAA,KAAK,CAACrC,YAAN,GAAqBoC,MAAM,CAACK,KAA5B;AACA;;AAEJ,SAAKhB,mBAAL;AACIY,MAAAA,KAAK,CAACpC,iBAAN,GAA0B,IAA1B;AACAoC,MAAAA,KAAK,CAACnC,cAAN,GAAuB,KAAvB;AACAmC,MAAAA,KAAK,CAAClC,eAAN,GAAwB,IAAxB;AACA;;AACJ,SAAKuB,mBAAL;AAA0B;AACtBW,QAAAA,KAAK,CAACpD,WAAN,CAAkByD,QAAlB,GAA6BL,KAAK,CAACpD,WAAN,CAAkByD,QAAlB,CAA2BC,MAA3B,CAAkCP,MAAM,CAACI,IAAzC,CAA7B;AACAH,QAAAA,KAAK,CAACpC,iBAAN,GAA0B,KAA1B;AACAoC,QAAAA,KAAK,CAACnC,cAAN,GAAuB,IAAvB;AACA;AACH;;AACD,SAAKyB,mBAAL;AACIU,MAAAA,KAAK,CAACpC,iBAAN,GAA0B,KAA1B;AACAoC,MAAAA,KAAK,CAAClC,eAAN,GAAwBiC,MAAM,CAACK,KAA/B;AACA;;AAEJ,SAAKb,mBAAL;AACIS,MAAAA,KAAK,CAACjC,iBAAN,GAA0B,IAA1B;AACAiC,MAAAA,KAAK,CAAChC,cAAN,GAAuB,KAAvB;AACAgC,MAAAA,KAAK,CAAC/B,eAAN,GAAwB,KAAxB;AACA;;AACJ,SAAKuB,mBAAL;AACIQ,MAAAA,KAAK,CAACjC,iBAAN,GAA0B,KAA1B;AACAiC,MAAAA,KAAK,CAAChC,cAAN,GAAuB,IAAvB;AACAgC,MAAAA,KAAK,CAACrD,KAAN,GAAcqD,KAAK,CAACrD,KAAN,CAAY4D,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASV,MAAM,CAACI,IAA1C,CAAd;AACA;;AACJ,SAAKV,mBAAL;AACIO,MAAAA,KAAK,CAACjC,iBAAN,GAA0B,KAA1B;AACAiC,MAAAA,KAAK,CAAC/B,eAAN,GAAwB8B,MAAM,CAACK,KAA/B;AACA;;AAEJ,SAAKV,mBAAL;AACIM,MAAAA,KAAK,CAAC9B,iBAAN,GAA0B,IAA1B;AACA8B,MAAAA,KAAK,CAAC7B,cAAN,GAAuB,KAAvB;AACA6B,MAAAA,KAAK,CAAC5B,eAAN,GAAwB,KAAxB;AACA;;AACJ,SAAKuB,mBAAL;AACIK,MAAAA,KAAK,CAAC9B,iBAAN,GAA0B,KAA1B;AACA8B,MAAAA,KAAK,CAAC7B,cAAN,GAAuB4B,MAAM,CAACI,IAAP,CAAYO,OAAnC;AACA;;AACJ,SAAKd,mBAAL;AACII,MAAAA,KAAK,CAAC9B,iBAAN,GAA0B,KAA1B;AACA8B,MAAAA,KAAK,CAAC5B,eAAN,GAAwB2B,MAAM,CAACK,KAA/B;AACA;;AAEJ,SAAKzB,kBAAL;AACIqB,MAAAA,KAAK,CAACW,eAAN,GAAwB,IAAxB;AACAX,MAAAA,KAAK,CAACY,YAAN,GAAqB,KAArB;AACAZ,MAAAA,KAAK,CAACa,aAAN,GAAsB,KAAtB;AACA;;AACJ,SAAKjC,kBAAL;AACIoB,MAAAA,KAAK,CAACW,eAAN,GAAwB,KAAxB;AACAX,MAAAA,KAAK,CAACY,YAAN,GAAqB,IAArB;AACAZ,MAAAA,KAAK,CAACrD,KAAN,GAAcoD,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBN,KAAK,CAACrD,KAAzB,CAAd;AACA;;AACJ,SAAKkC,kBAAL;AACImB,MAAAA,KAAK,CAACW,eAAN,GAAwB,KAAxB;AACAX,MAAAA,KAAK,CAACa,aAAN,GAAsBd,MAAM,CAACK,KAA7B;AACA;;AAEJ,SAAKtB,oBAAL;AACIkB,MAAAA,KAAK,CAAC1C,kBAAN,GAA2B,IAA3B;AACA0C,MAAAA,KAAK,CAACc,cAAN,GAAuB,KAAvB;AACAd,MAAAA,KAAK,CAACe,eAAN,GAAwB,KAAxB;AACA;;AACJ,SAAKhC,oBAAL;AACIiB,MAAAA,KAAK,CAAC1C,kBAAN,GAA2B,KAA3B;AACA0C,MAAAA,KAAK,CAACzC,eAAN,GAAwB,IAAxB;AACAyC,MAAAA,KAAK,CAACrD,KAAN,GAAcoD,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBN,KAAK,CAACrD,KAAzB,CAAd;AACA;;AACJ,SAAKqC,oBAAL;AACIgB,MAAAA,KAAK,CAAC1C,kBAAN,GAA2B,KAA3B;AACA0C,MAAAA,KAAK,CAACxC,gBAAN,GAAyBuC,MAAM,CAACK,KAAhC;AACA;;AAEJ,SAAK/B,oBAAL;AACI2B,MAAAA,KAAK,CAAC7C,kBAAN,GAA2B,IAA3B;AACA6C,MAAAA,KAAK,CAAC5C,eAAN,GAAwB,KAAxB;AACA4C,MAAAA,KAAK,CAAC3C,gBAAN,GAAyB,KAAzB;AACA;;AACJ,SAAKiB,oBAAL;AACI0B,MAAAA,KAAK,CAAC7C,kBAAN,GAA2B,KAA3B;AACA6C,MAAAA,KAAK,CAAC5C,eAAN,GAAwB,IAAxB;AACA4C,MAAAA,KAAK,CAACpD,WAAN,GAAoBmD,MAAM,CAACI,IAA3B;AACA;;AACJ,SAAK5B,oBAAL;AACIyB,MAAAA,KAAK,CAACgB,mBAAN,GAA4B,KAA5B;AACAhB,MAAAA,KAAK,CAAC3C,gBAAN,GAAyB0C,MAAM,CAACK,KAAhC;AACA;;AAEJ,SAAK5B,0BAAL;AACIwB,MAAAA,KAAK,CAACiB,qBAAN,GAA8B,IAA9B;AACAjB,MAAAA,KAAK,CAACkB,kBAAN,GAA2B,KAA3B;AACAlB,MAAAA,KAAK,CAACmB,mBAAN,GAA4B,KAA5B;AACA;;AACJ,SAAK1C,0BAAL;AACIuB,MAAAA,KAAK,CAACiB,qBAAN,GAA8B,KAA9B;AACAjB,MAAAA,KAAK,CAACkB,kBAAN,GAA2B,IAA3B;AACAlB,MAAAA,KAAK,CAACrD,KAAN,GAAcoD,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBN,KAAK,CAACrD,KAAzB,CAAd;AACA;;AACJ,SAAK+B,0BAAL;AACIsB,MAAAA,KAAK,CAACoB,sBAAN,GAA+B,KAA/B;AACApB,MAAAA,KAAK,CAACmB,mBAAN,GAA4BpB,MAAM,CAACK,KAAnC;AACA;;AACJ;AACI;AAzHR;AA2HH,CA5HM,CADX;;AA+HA,eAAeP,OAAf","sourcesContent":["\nimport produce from '../util/produce';\nexport const initialState = {\n    Posts: [],\n    currentPost: null,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    loadCategorypostsLoading: false,\n    loadCategorypostsDone: false,\n    loadCategorypostsError: null,\n    loadCurpostLoading: false,\n    loadCurpostDone: false,\n    loadCurpostError: null,\n    searchPostsLoading: false,\n    searchPostsDone: false,\n    searchPostsError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    updatePostLoading: false,\n    updatePostDone: false,\n    updatePostError: null,\n}\n\nexport const LOAD_CURPOST_REQUEST = 'LOAD_CURPOST_REQUEST';\nexport const LOAD_CURPOST_SUCCESS = 'LOAD_CURPOST_SUCCESS';\nexport const LOAD_CURPOST_FAILURE = 'LOAD_CURPOST_FAILURE';\n\nexport const LOAD_CATEGORYPOSTS_REQUEST = 'LOAD_CATEGORYPOSTS_REQUEST';\nexport const LOAD_CATEGORYPOSTS_SUCCESS = 'LOAD_CATEGORYPOSTS_SUCCESS';\nexport const LOAD_CATEGORYPOSTS_FAILURE = 'LOAD_CATEGORYPOSTS_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const SEARCH_POSTS_REQUEST = 'SEARCH_POSTS_REQUEST';\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\nexport const SEARCH_POSTS_FAILURE = 'SEARCH_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\n\n\nconst reducer = (state = initialState, action) =>\n    produce(state, (draft) => {\n        switch (action.type) {\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = false;\n                break;\n            case ADD_POST_SUCCESS:\n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                draft.Posts.unshift(action.data);\n                break;\n            case ADD_POST_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n\n            case ADD_COMMENT_REQUEST:\n                draft.addCommentLoading = true;\n                draft.addCommentDone = false;\n                draft.addCommentError = null;\n                break;\n            case ADD_COMMENT_SUCCESS: {\n                draft.currentPost.Comments = draft.currentPost.Comments.concat(action.data);\n                draft.addCommentLoading = false;\n                draft.addCommentDone = true;\n                break;\n            }\n            case ADD_COMMENT_FAILURE:\n                draft.addCommentLoading = false;\n                draft.addCommentError = action.error;\n                break;\n\n            case REMOVE_POST_REQUEST:\n                draft.removePostLoading = true;\n                draft.removePostDone = false;\n                draft.removePostError = false;\n                break;\n            case REMOVE_POST_SUCCESS:\n                draft.removePostLoading = false;\n                draft.removePostDone = true;\n                draft.Posts = draft.Posts.filter((v) => v.id !== action.data);\n                break;\n            case REMOVE_POST_FAILURE:\n                draft.removePostLoading = false;\n                draft.removePostError = action.error;\n                break;\n\n            case UPDATE_POST_REQUEST:\n                draft.updatePostLoading = true;\n                draft.updatePostDone = false;\n                draft.updatePostError = false;\n                break;\n            case UPDATE_POST_SUCCESS:\n                draft.updatePostLoading = false;\n                draft.updatePostDone = action.data.message;\n                break;\n            case UPDATE_POST_FAILURE:\n                draft.updatePostLoading = false;\n                draft.updatePostError = action.error;\n                break;\n\n            case LOAD_POSTS_REQUEST:\n                draft.loadPostLoading = true;\n                draft.loadPostDone = false;\n                draft.loadPostError = false;\n                break;\n            case LOAD_POSTS_SUCCESS:\n                draft.loadPostLoading = false;\n                draft.loadPostDone = true;\n                draft.Posts = action.data.concat(draft.Posts);\n                break;\n            case LOAD_POSTS_FAILURE:\n                draft.loadPostLoading = false;\n                draft.loadPostError = action.error;\n                break;\n\n            case SEARCH_POSTS_REQUEST:\n                draft.searchPostsLoading = true;\n                draft.searchPostDone = false;\n                draft.searchPostError = false;\n                break;\n            case SEARCH_POSTS_SUCCESS:\n                draft.searchPostsLoading = false;\n                draft.searchPostsDone = true;\n                draft.Posts = action.data.concat(draft.Posts);\n                break;\n            case SEARCH_POSTS_FAILURE:\n                draft.searchPostsLoading = false;\n                draft.searchPostsError = action.error;\n                break;\n\n            case LOAD_CURPOST_REQUEST:\n                draft.loadCurpostLoading = true;\n                draft.loadCurpostDone = false;\n                draft.loadCurpostError = false;\n                break;\n            case LOAD_CURPOST_SUCCESS:\n                draft.loadCurpostLoading = false;\n                draft.loadCurpostDone = true;\n                draft.currentPost = action.data;\n                break;\n            case LOAD_CURPOST_FAILURE:\n                draft.loadPCurpostLoading = false;\n                draft.loadCurpostError = action.error;\n                break;\n\n            case LOAD_CATEGORYPOSTS_REQUEST:\n                draft.loadCatorypostLoading = true;\n                draft.loadCatorypostDone = false;\n                draft.loadCatorypostError = false;\n                break;\n            case LOAD_CATEGORYPOSTS_SUCCESS:\n                draft.loadCatorypostLoading = false;\n                draft.loadCatorypostDone = true;\n                draft.Posts = action.data.concat(draft.Posts);\n                break;\n            case LOAD_CATEGORYPOSTS_FAILURE:\n                draft.loadPCatorypostLoading = false;\n                draft.loadCatorypostError = action.error;\n                break;\n            default:\n                break;\n        }\n    });\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}