{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/components/PostCard.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Tag } from 'antd';\nimport { useCallback } from 'react';\nimport ReactHtmlParser from 'html-react-parser'; //전체 post 를 가져와서 띄어주는 글 (최신순으로)\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n  var hashTag = post.hashTag,\n      category = post.category,\n      id = post.id;\n  var hashTagSplit = [];\n\n  if (hashTag) {\n    hashTag.split(/(#[^\\s#]+)/g).map(function (v) {\n      if (v.match(/(#[^\\s#]+)/)) {\n        hashTagSplit.push(v);\n      }\n    });\n  }\n\n  return __jsx(Card, {\n    title: post.title,\n    style: {\n      display: \"inline-block\",\n      width: \"50%\",\n      height: \"300px\"\n    },\n    extra: __jsx(React.Fragment, null, __jsx(\"div\", {\n      style: {\n        display: \"inline-block\",\n        marginRight: \"5px\",\n        borderTop: \"0\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, post.createdAt.substr(0, 10)), __jsx(\"a\", {\n      style: {\n        fontSize: \"19px\",\n        color: \"blue\"\n      },\n      href: \"/post/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"More\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, hashTag && hashTagSplit.map(function (value, index) {\n    return __jsx(Tag, {\n      color: \"blue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 60\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 78\n      }\n    }, value[0], value.slice(1)));\n  }));\n};\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/PostCard.js"],"names":["Card","Tag","useCallback","ReactHtmlParser","PostCard","post","hashTag","category","id","hashTagSplit","split","map","v","match","push","title","display","width","height","marginRight","borderTop","createdAt","substr","fontSize","color","value","index","slice"],"mappings":";;;;;AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,MAA1B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC3B,MAAQC,OAAR,GAAkCD,IAAlC,CAAQC,OAAR;AAAA,MAAiBC,QAAjB,GAAkCF,IAAlC,CAAiBE,QAAjB;AAAA,MAA2BC,EAA3B,GAAkCH,IAAlC,CAA2BG,EAA3B;AACA,MAAMC,YAAY,GAAG,EAArB;;AACA,MAAIH,OAAJ,EAAa;AAETA,IAAAA,OAAO,CAACI,KAAR,CAAc,aAAd,EAA6BC,GAA7B,CAAiC,UAACC,CAAD,EAAO;AACpC,UAAIA,CAAC,CAACC,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACvBJ,QAAAA,YAAY,CAACK,IAAb,CAAkBF,CAAlB;AACH;AACJ,KAJD;AAMH;;AAED,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,IAAI,CAACU,KAAlB;AAAyB,IAAA,KAAK,EAAI;AAACC,MAAAA,OAAO,EAAG,cAAX;AAA2BC,MAAAA,KAAK,EAAG,KAAnC;AAA0CC,MAAAA,MAAM,EAAG;AAAnD,KAAlC;AACI,IAAA,KAAK,EAAE,4BACH;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,OAAO,EAAE,cAAX;AAA2BG,QAAAA,WAAW,EAAE,KAAxC;AAA+CC,QAAAA,SAAS,EAAE;AAA1D,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8Ef,IAAI,CAACgB,SAAL,CAAeC,MAAf,CAAsB,CAAtB,EAAyB,EAAzB,CAA9E,CADG,EAEH;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAAV;AAA+C,MAAA,IAAI,kBAAWhB,EAAX,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKF,OAAO,IAAIG,YAAY,CAACE,GAAb,CAAiB,UAACc,KAAD,EAAQC,KAAR;AAAA,WAAkB,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,KAAK,CAAC,CAAD,CAAX,EAAgBA,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAhB,CAAlB,CAAlB;AAAA,GAAjB,CAJhB,CADJ;AAQH,CArBD;;KAAMvB,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import { Card, Tag } from 'antd';\nimport { useCallback } from 'react';\nimport ReactHtmlParser from 'html-react-parser'\n\n//전체 post 를 가져와서 띄어주는 글 (최신순으로)\nconst PostCard = ({ post }) => {\n    const { hashTag, category, id } = post;\n    const hashTagSplit = [];\n    if (hashTag) {\n\n        hashTag.split(/(#[^\\s#]+)/g).map((v) => {\n            if (v.match(/(#[^\\s#]+)/)) {\n                hashTagSplit.push(v);\n            }\n        })\n\n    }\n\n    return (\n        <Card title={post.title} style = {{display : \"inline-block\", width : \"50%\", height : \"300px\"}}\n            extra={<>\n                <div style={{ display: \"inline-block\", marginRight: \"5px\", borderTop: \"0\" }}>{post.createdAt.substr(0, 10)}</div>\n                <a style={{ fontSize: \"19px\", color: \"blue\" }} href={`/post/${id}`} >More</a></>} >\n            {hashTag && hashTagSplit.map((value, index) => <Tag color=\"blue\"><div>{value[0]}{value.slice(1)}</div></Tag>)}\n        </Card>\n    );\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}