{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjun/My blog/front/components/PostCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Tag } from 'antd';\nimport { useCallback } from 'react';\nimport ReactHtmlParser from 'html-react-parser'; //전체 post 를 가져와서 띄어주는 글 (최신순으로)\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    hashTag,\n    category,\n    id\n  } = post;\n  const hashTagSplit = [];\n\n  if (hashTag) {\n    hashTag.split(/(#[^\\s#]+)/g).map(v => {\n      if (v.match(/(#[^\\s#]+)/)) {\n        hashTagSplit.push(v);\n      }\n    });\n  }\n\n  return __jsx(Card, {\n    title: post.title,\n    extra: __jsx(React.Fragment, null, __jsx(Tag, {\n      color: \"geekblue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 44\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 68\n      }\n    }, \"Category : \", __jsx(\"a\", {\n      href: `category/${category}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 84\n      }\n    }, category))), __jsx(\"div\", {\n      style: {\n        display: \"inline-block\",\n        marginRight: \"5px\",\n        borderTop: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 145\n      }\n    }, \"\\uC791\\uC131\\uC77C\\uC790 : \", post.createdAt.substr(0, 10)), __jsx(\"a\", {\n      style: {\n        fontSize: \"19px\",\n        color: \"blue\"\n      },\n      href: `/post/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"More\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, hashTag && hashTagSplit.map((value, index) => {\n    __jsx(Tag, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 60\n      }\n    }, value[0]);\n  }), hashTag && hashTagSplit.map((value, index) => __jsx(\"p\", {\n    style: {\n      display: \"inline\",\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 59\n    }\n  }, __jsx(\"p\", {\n    style: {\n      display: \"inline\",\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \" \", value[0], \" \"), \"  \", value.slice(1), \"  \")));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/PostCard.js"],"names":["Card","Tag","useCallback","ReactHtmlParser","PostCard","post","hashTag","category","id","hashTagSplit","split","map","v","match","push","title","display","marginRight","borderTop","createdAt","substr","fontSize","color","value","index","slice"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,GAAd,QAAwB,MAAxB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,QAAT;AAAkBC,IAAAA;AAAlB,MAAwBH,IAA9B;AACA,QAAMI,YAAY,GAAG,EAArB;;AACA,MAAGH,OAAH,EACA;AAEIA,IAAAA,OAAO,CAACI,KAAR,CAAc,aAAd,EAA6BC,GAA7B,CAAkCC,CAAD,IAAO;AACpC,UAAIA,CAAC,CAACC,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACvBJ,QAAAA,YAAY,CAACK,IAAb,CAAkBF,CAAlB;AACH;AACJ,KAJD;AAMH;;AAED,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,IAAI,CAACU,KAAlB;AAA0B,IAAA,KAAK,EAAE,4BAAE,MAAC,GAAD;AAAK,MAAA,KAAK,EAAG,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAG,MAAA,IAAI,EAAK,YAAWR,QAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCA,QAApC,CAAhB,CAAxB,CAAF,EAAuG;AAAK,MAAA,KAAK,EAAI;AAACS,QAAAA,OAAO,EAAC,cAAT;AAAyBC,QAAAA,WAAW,EAAG,KAAvC;AAA+CC,QAAAA,SAAS,EAAG;AAA3D,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAuFb,IAAI,CAACc,SAAL,CAAeC,MAAf,CAAsB,CAAtB,EAAwB,EAAxB,CAAvF,CAAvG,EACjC;AAAG,MAAA,KAAK,EAAI;AAACC,QAAAA,QAAQ,EAAG,MAAZ;AAAoBC,QAAAA,KAAK,EAAG;AAA5B,OAAZ;AAAiD,MAAA,IAAI,EAAG,SAAQd,EAAG,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADiC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKF,OAAO,IAAIG,YAAY,CAACE,GAAb,CAAiB,CAACY,KAAD,EAAOC,KAAP,KAAiB;AAAC,UAAC,GAAD;AAAK,MAAA,KAAK,EAAG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBD,KAAK,CAAC,CAAD,CAA1B;AAAqC,GAAxE,CAFhB,EAGKjB,OAAO,IAAIG,YAAY,CAACE,GAAb,CAAiB,CAACY,KAAD,EAAOC,KAAP,KAAiB;AAAG,IAAA,KAAK,EAAI;AAACR,MAAAA,OAAO,EAAG,QAAX;AAAqBC,MAAAA,WAAW,EAAG;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC9C;AAAG,IAAA,KAAK,EAAI;AAACD,MAAAA,OAAO,EAAG,QAAX;AAAqBM,MAAAA,KAAK,EAAG;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoDC,KAAK,CAAC,CAAD,CAAzD,MAD8C,QACuBA,KAAK,CAACE,KAAN,CAAY,CAAZ,CADvB,OAAlC,CAHhB,CADJ;AAQH,CAtBD;;AAwBA,eAAerB,QAAf","sourcesContent":["import {Card, Tag} from 'antd';\nimport { useCallback } from 'react';\nimport ReactHtmlParser from 'html-react-parser'\n\n//전체 post 를 가져와서 띄어주는 글 (최신순으로)\nconst PostCard = ({ post }) => {\n    const {hashTag,category,id} = post;\n    const hashTagSplit = [];\n    if(hashTag)\n    {\n        \n        hashTag.split(/(#[^\\s#]+)/g).map((v) => {\n            if (v.match(/(#[^\\s#]+)/)) {\n                hashTagSplit.push(v);\n            }\n        })\n        \n    }\n    \n    return (\n        <Card title={post.title}  extra={<><Tag color = \"geekblue\"><div>Category : <a href = {`category/${category}`}>{category}</a></div></Tag><div style = {{display:\"inline-block\", marginRight : \"5px\" , borderTop : \"0\"}}>작성일자 : {post.createdAt.substr(0,10)}</div>\n        <a style = {{fontSize : \"19px\", color : \"blue\"}} href={`/post/${id}`} >More</a></>} >\n            {hashTag && hashTagSplit.map((value,index) => {<Tag color = \"blue\">{value[0]}</Tag>})}\n            {hashTag && hashTagSplit.map((value,index) => <p style = {{display : \"inline\", marginRight : \"5px\"}}>  \n            <p style = {{display : \"inline\" ,color : \"blue\"}}> {value[0]} </p>  {value.slice(1)}  </p>)}\n        </Card>\n    );\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}