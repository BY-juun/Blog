{"ast":null,"code":"var __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport { Pagination } from 'antd';\nimport ListComponent from \"../../components/ListComponent\"; //More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nvar category = function category() {\n  var _useState = useState(1),\n      current = _useState[0],\n      setCurrent = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      Posts = _useSelector.Posts;\n\n  var startIndex = 0;\n  var lastIndex = 10;\n\n  var _useState2 = useState(Posts.slice(startIndex, lastIndex)),\n      showPosts = _useState2[0],\n      setShowPosts = _useState2[1];\n\n  var router = useRouter();\n  var category = router.query.category;\n  var onChange = useCallback(function (page) {\n    setCurrent(page);\n    startIndex = (page - 1) * 10;\n    lastIndex = startIndex + 10;\n    setShowPosts(Posts.slice(startIndex, lastIndex));\n  }, [current, showPosts]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, category)), __jsx(AppLayout, null, __jsx(\"h1\", {\n    style: {\n      marginTop: \"45px\",\n      textAlign: \"center\"\n    }\n  }, category), __jsx(ListComponent, {\n    Posts: showPosts\n  }), __jsx(Pagination, {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\",\n      marginBottom: \"15px\"\n    },\n    current: current,\n    onChange: onChange,\n    total: Posts.length\n  })));\n};\n\nexport var __N_SSP = true;\nexport default category;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/category/[category].js"],"names":["AppLayout","useRouter","useSelector","React","useCallback","useState","Head","Pagination","ListComponent","category","current","setCurrent","state","post","Posts","startIndex","lastIndex","slice","showPosts","setShowPosts","router","query","onChange","page","marginTop","textAlign","marginBottom","length"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAUC,WAAV,QAA6B,aAA7B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,UAAT,QAA2B,MAA3B;AAKA,OAAOC,aAAP,MAA0B,gCAA1B,C,CAEA;AACA;;AACA,IAAMC,QAAQ,GAAG,oBAAM;AACnB,kBAA6BJ,QAAQ,CAAC,CAAD,CAArC;AAAA,MAAOK,OAAP;AAAA,MAAeC,UAAf;;AACA,qBAAgBT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAUA,KAAK,CAACC,IAAhB;AAAA,GAAD,CAA3B;AAAA,MAAOC,KAAP,gBAAOA,KAAP;;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,mBAAkCX,QAAQ,CAACS,KAAK,CAACG,KAAN,CAAYF,UAAZ,EAAuBC,SAAvB,CAAD,CAA1C;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,MAAM,GAAGnB,SAAS,EAAxB;AACA,MAAQQ,QAAR,GAAqBW,MAAM,CAACC,KAA5B,CAAQZ,QAAR;AAEA,MAAMa,QAAQ,GAAGlB,WAAW,CAAC,UAAAmB,IAAI,EAAI;AACjCZ,IAAAA,UAAU,CAACY,IAAD,CAAV;AACAR,IAAAA,UAAU,GAAG,CAACQ,IAAI,GAAC,CAAN,IAAW,EAAxB;AACAP,IAAAA,SAAS,GAAGD,UAAU,GAAG,EAAzB;AACAI,IAAAA,YAAY,CAACL,KAAK,CAACG,KAAN,CAAYF,UAAZ,EAAuBC,SAAvB,CAAD,CAAZ;AACH,GAL2B,EAK1B,CAACN,OAAD,EAASQ,SAAT,CAL0B,CAA5B;AAQA,SACI,4BACI,MAAC,IAAD,QACI,qBAAQT,QAAR,CADJ,CADJ,EAII,MAAC,SAAD,QACI;AAAI,IAAA,KAAK,EAAI;AAACe,MAAAA,SAAS,EAAG,MAAb;AAAoBC,MAAAA,SAAS,EAAG;AAAhC;AAAb,KAAyDhB,QAAzD,CADJ,EAEI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAIS;AAAxB,IAFJ,EAGI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAI;AAACO,MAAAA,SAAS,EAAG,QAAb;AAAuBD,MAAAA,SAAS,EAAG,MAAnC;AAA2CE,MAAAA,YAAY,EAAG;AAA1D,KAArB;AAAwF,IAAA,OAAO,EAAEhB,OAAjG;AAA0G,IAAA,QAAQ,EAAEY,QAApH;AAA8H,IAAA,KAAK,EAAER,KAAK,CAACa;AAA3I,IAHJ,CAJJ,CADJ;AAYH,CA7BD;;;AAkDA,eAAelB,QAAf","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport {  useSelector } from 'react-redux';\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport {LOAD_CATEGORYPOSTS_REQUEST} from '../../reducers/post'\nimport { Pagination } from 'antd';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user'\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport ListComponent from \"../../components/ListComponent\";\n\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\nconst category = () => {\n    const [current,setCurrent] = useState(1);\n    const {Posts} = useSelector((state)=>(state.post));\n    let startIndex = 0; \n    let lastIndex = 10;\n    const [showPosts, setShowPosts] = useState(Posts.slice(startIndex,lastIndex));\n    const router = useRouter();\n    const { category } = router.query;\n\n    const onChange = useCallback(page => {\n        setCurrent(page);\n        startIndex = (page-1) * 10;\n        lastIndex = startIndex + 10;\n        setShowPosts(Posts.slice(startIndex,lastIndex));\n    },[current,showPosts]);\n    \n\n    return (\n        <>\n            <Head>\n                <title>{category}</title>\n            </Head>\n            <AppLayout>\n                <h1 style = {{marginTop : \"45px\",textAlign : \"center\"}}>{category}</h1>\n                <ListComponent Posts = {showPosts}/>\n                <Pagination style = {{textAlign : \"center\", marginTop : \"20px\", marginBottom : \"15px\"}} current={current} onChange={onChange} total={Posts.length} />\n            </AppLayout>\n        </> \n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch({\n        type : LOAD_CATEGORYPOSTS_REQUEST,\n        data: context.params.category,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n  \n\nexport default category;"]},"metadata":{},"sourceType":"module"}