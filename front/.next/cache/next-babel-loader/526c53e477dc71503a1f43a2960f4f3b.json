{"ast":null,"code":"var __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport { LOAD_CATEGORYPOSTS_REQUEST, LOAD_POSTNUM_REQUEST } from \"../../reducers/post\";\nimport { Pagination } from \"antd\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport wrapper from \"../../store/configureStore\";\nimport { END } from \"redux-saga\";\nimport axios from \"axios\";\nimport ListComponent from \"../../components/ListComponent\";\n\nconst category = () => {\n  const dispatch = useDispatch();\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(1);\n  const {\n    Posts,\n    currentPageNum,\n    PostNum\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    category\n  } = router.query;\n  useEffect(() => {\n    setCurrent(currentPageNum);\n  }, [currentPageNum]);\n  const onChange = useCallback(page => {\n    return dispatch({\n      type: LOAD_CATEGORYPOSTS_REQUEST,\n      data: {\n        category: category,\n        page: page\n      }\n    });\n  }, [category]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, category)), __jsx(AppLayout, null, __jsx(\"h1\", {\n    style: {\n      marginTop: \"45px\",\n      textAlign: \"center\"\n    }\n  }, category), __jsx(ListComponent, {\n    Posts: Posts\n  }), __jsx(Pagination, {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\",\n      marginBottom: \"15px\"\n    },\n    current: current,\n    onChange: onChange,\n    total: PostNum - PostNum / 11\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_CATEGORYPOSTS_REQUEST,\n    data: {\n      category: context.params.category,\n      page: 1\n    }\n  });\n  context.store.dispatch({\n    type: LOAD_POSTNUM_REQUEST,\n    data: context.params.category\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default category;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/category/[category].js"],"names":["AppLayout","useRouter","useDispatch","useSelector","React","useCallback","useEffect","useState","Head","LOAD_CATEGORYPOSTS_REQUEST","LOAD_POSTNUM_REQUEST","Pagination","LOAD_MY_INFO_REQUEST","wrapper","END","axios","ListComponent","category","dispatch","current","setCurrent","Posts","currentPageNum","PostNum","state","post","router","query","onChange","page","type","data","marginTop","textAlign","marginBottom","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport { LOAD_CATEGORYPOSTS_REQUEST, LOAD_POSTNUM_REQUEST } from \"../../reducers/post\";\nimport { Pagination } from \"antd\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport wrapper from \"../../store/configureStore\";\nimport { END } from \"redux-saga\";\nimport axios from \"axios\";\nimport ListComponent from \"../../components/ListComponent\";\n\n\nconst category = () => {\n  const dispatch = useDispatch();\n  const [current, setCurrent] = useState(1);\n  const {Posts, currentPageNum, PostNum} = useSelector((state)=>(state.post));\n  \n  const router = useRouter();\n  const { category } = router.query;\n\n  useEffect(()=>{\n    setCurrent(currentPageNum);\n  },[currentPageNum]);\n\n  const onChange = useCallback(\n    (page) => {\n      return dispatch({\n        type : LOAD_CATEGORYPOSTS_REQUEST,\n        data : {\n          category : category,\n          page : page,\n        }\n      })\n    },\n    [category]\n  );\n\n  return (\n    <>\n      <Head>\n        <title>{category}</title>\n      </Head>\n      <AppLayout>\n        <h1 style={{ marginTop: \"45px\", textAlign: \"center\" }}>{category}</h1>\n        <ListComponent Posts = {Posts}/>\n        <Pagination\n          style={{\n            textAlign: \"center\",\n            marginTop: \"20px\",\n            marginBottom: \"15px\",\n          }}\n          current={current}\n          onChange={onChange}\n          total = {PostNum-(PostNum/11)}\n        />\n      </AppLayout>\n    </>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_CATEGORYPOSTS_REQUEST,\n      data: {\n        category : context.params.category,\n        page : 1\n      }\n    });\n    context.store.dispatch({\n        type : LOAD_POSTNUM_REQUEST,\n        data : context.params.category,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default category;\n"]},"metadata":{},"sourceType":"module"}