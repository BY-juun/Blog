{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { createGlobalStyle } from \"styled-components\";\nimport { Pagination } from 'antd';\nimport ListComponent from '../components/ListComponent';\nexport const Global = createGlobalStyle([\".ant-pagination-options{display:none;}\"]);\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(1);\n  const {\n    Posts,\n    currentPageNum\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    setCurrent(currentPageNum);\n  }, [currentPageNum]);\n  const onChange = useCallback(page => {\n    return dispatch({\n      type: LOAD_MAIN_POSTS_REQUEST,\n      data: {\n        page\n      }\n    });\n  }, []);\n  return __jsx(AppLayout, null, __jsx(ListComponent, {\n    Posts: Posts\n  }), __jsx(\"div\", {\n    style: {\n      marginBottom: \"15px\"\n    }\n  }), __jsx(Global, null), __jsx(Pagination, {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\",\n      marginBottom: \"15px\"\n    },\n    current: current,\n    onChange: onChange,\n    total: 80\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MAIN_POSTS_REQUEST,\n    data: {\n      page: 1\n    }\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/index.js"],"names":["React","useState","useCallback","useEffect","AppLayout","useSelector","useDispatch","LOAD_MY_INFO_REQUEST","LOAD_MAIN_POSTS_REQUEST","wrapper","END","axios","createGlobalStyle","Pagination","ListComponent","Global","Home","dispatch","current","setCurrent","Posts","currentPageNum","state","post","onChange","page","type","data","marginBottom","textAlign","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React,{useState,useCallback, useEffect} from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch} from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user'\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport { createGlobalStyle } from \"styled-components\";\nimport { Pagination } from 'antd';\nimport ListComponent from '../components/ListComponent';\n\nexport const Global = createGlobalStyle`\n    .ant-pagination-options{\n        display : none;\n    }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [current,setCurrent] = useState(1);\n  const {Posts, currentPageNum} = useSelector((state)=>(state.post));\n\n  useEffect(()=>{\n    setCurrent(currentPageNum);\n  },[currentPageNum])\n\n  const onChange = useCallback((page) => {\n    return dispatch({\n      type: LOAD_MAIN_POSTS_REQUEST,\n      data : {\n        page\n      }\n    })\n  },[]);\n\n  return (\n    <AppLayout>\n      <ListComponent Posts = {Posts}/>\n      <div style = {{marginBottom : \"15px\"}}></div>\n      <Global />\n      <Pagination style = {{textAlign : \"center\", marginTop : \"20px\", marginBottom : \"15px\"}} current={current} onChange={onChange} total={80} />\n    </AppLayout>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MAIN_POSTS_REQUEST,\n    data : {\n      page : 1\n    }\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  })\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}