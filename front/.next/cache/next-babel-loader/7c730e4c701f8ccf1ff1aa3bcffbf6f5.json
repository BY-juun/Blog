{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/pages/category/[category].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport React from 'react';\nimport Head from 'next/head';\nimport { useEffect } from \"react\";\nimport PostCard from '../../components/PostCard';\nimport { LOAD_CATEGORYPOSTS_REQUEST } from '../../reducers/post'; //More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nvar category = function category() {\n  _s();\n\n  var router = useRouter();\n  var category = router.query.category;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      Posts = _useSelector.Posts;\n\n  useEffect(function () {\n    console.log(id);\n\n    if (category) {\n      dispatch({\n        type: LOAD_CATEGORYPOSTS_REQUEST,\n        data: category\n      });\n    }\n  }, [category]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, category)), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, Posts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      style: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    });\n  })));\n};\n\n_s(category, \"uTlxP0NtXEsPq+FiFOSxWkm+Nl8=\", false, function () {\n  return [useRouter, useSelector];\n});\n\nexport default category;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/category/[category].js"],"names":["AppLayout","useRouter","useSelector","React","Head","useEffect","PostCard","LOAD_CATEGORYPOSTS_REQUEST","category","router","query","state","post","Posts","console","log","id","dispatch","type","data","map"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,0BAAR,QAAyC,qBAAzC,C,CACA;AACA;;AACA,IAAMC,QAAQ,GAAG,oBAAM;AAAA;;AACnB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAQO,QAAR,GAAqBC,MAAM,CAACC,KAA5B,CAAQF,QAAR;;AACA,qBAAgBN,WAAW,CAAC,UAACS,KAAD;AAAA,WAAUA,KAAK,CAACC,IAAhB;AAAA,GAAD,CAA3B;AAAA,MAAOC,KAAP,gBAAOA,KAAP;;AACAR,EAAAA,SAAS,CAAC,YAAI;AACVS,IAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;;AACA,QAAGR,QAAH,EAAY;AACRS,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAGX,0BADF;AAELY,QAAAA,IAAI,EAAGX;AAFF,OAAD,CAAR;AAIH;AACJ,GARQ,EAQP,CAACA,QAAD,CARO,CAAT;AASA,SAEI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,QAAR,CADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,KAAK,CAACO,GAAN,CAAU,UAACR,IAAD;AAAA,WAAS,MAAC,QAAD;AAAW,MAAA,GAAG,EAAIA,IAAI,CAACI,EAAvB;AAA2B,MAAA,IAAI,EAAIJ,IAAnC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AAAA,GAAV,CADL,CAJJ,CAFJ;AAWH,CAxBD;;GAAMJ,Q;UACaP,S,EAECC,W;;;AAuBpB,eAAeM,QAAf","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport React from 'react';\nimport Head from 'next/head';\nimport { useEffect } from \"react\";\nimport PostCard from '../../components/PostCard';\nimport {LOAD_CATEGORYPOSTS_REQUEST} from '../../reducers/post'\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\nconst category = () => {\n    const router = useRouter();\n    const { category } = router.query;\n    const {Posts} = useSelector((state)=>(state.post));\n    useEffect(()=>{\n        console.log(id);\n        if(category){\n            dispatch({\n                type : LOAD_CATEGORYPOSTS_REQUEST,\n                data : category,\n            })\n        }\n    },[category])\n    return (\n        \n        <>\n            <Head>\n                <title>{category}</title>\n            </Head>\n            <AppLayout>\n                {Posts.map((post)=> <PostCard  key = {post.id} post = {post} style/>)}\n            </AppLayout>\n        </>\n    );\n};\n\nexport default category;"]},"metadata":{},"sourceType":"module"}