{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, message } from 'antd';\nimport Link from 'next/link';\nimport { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var postId = _ref.postId;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      comment = _useInput2[0],\n      onChangeComment = _useInput2[1],\n      setComment = _useInput2[2];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentLoading = _useSelector.addCommentLoading,\n      addCommentError = _useSelector.addCommentError;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addCommentError) {\n      message.error(addCommentError);\n      setComment('');\n    }\n  }, [addCommentError]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: postId,\n        comment: comment\n      }\n    });\n    setComment('');\n  }, [comment]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    style: {\n      display: \"flex\",\n      paddingTop: \"15px\",\n      height: \"100px\",\n      paddingBottom: \"15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694. \\uACFC\\uB3C4\\uD55C \\uBE44\\uB09C\\uC740 \\uD53C\\uD574\\uC8FC\\uC2DC\\uBA74 \\uAC10\\uC0AC\\uD558\\uACA0\\uC2B5\\uB2C8\\uB2E4. \",\n    name: \"user-comment\",\n    type: \"text\",\n    value: comment,\n    onChange: onChangeComment,\n    style: {\n      marginRight: \"20px\",\n      marginLeft: \"15px\",\n      borderRadius: \"20px\"\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    style: {\n      marginRight: \"15px\",\n      marginTop: \"20px\",\n      borderRadius: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"\\uC785\\uB825\"));\n};\n\n_s(CommentForm, \"Cr7QjruDdtpSluU4ZqSt7XwpfAM=\", false, function () {\n  return [useInput, useSelector, useDispatch];\n});\n\n_c = CommentForm;\nCommentForm.prototype = {\n  postId: PropTypes.number.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/CommentForm.js"],"names":["PropTypes","Form","Input","Button","message","Link","useCallback","useEffect","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","postId","comment","onChangeComment","setComment","state","post","addCommentLoading","addCommentError","dispatch","error","onSubmitComment","type","data","display","paddingTop","height","paddingBottom","marginRight","marginLeft","borderRadius","marginTop","prototype","number","isRequired"],"mappings":";;;;;;;;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA4C,MAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAEhC,kBAA+CL,QAAQ,CAAC,EAAD,CAAvD;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,eAAhB;AAAA,MAAiCC,UAAjC;;AACA,qBAA6CN,WAAW,CAAC,UAACO,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAAxD;AAAA,MAAOC,iBAAP,gBAAOA,iBAAP;AAAA,MAA0BC,eAA1B,gBAA0BA,eAA1B;;AACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGa,eAAH,EAAmB;AACfhB,MAAAA,OAAO,CAACkB,KAAR,CAAcF,eAAd;AACAJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GALQ,EAKP,CAACI,eAAD,CALO,CAAT;AAOA,MAAMG,eAAe,GAAGjB,WAAW,CAAC,YAAM;AACtCe,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGb,mBADF;AAELc,MAAAA,IAAI,EAAG;AAACZ,QAAAA,MAAM,EAANA,MAAD;AAASC,QAAAA,OAAO,EAAPA;AAAT;AAFF,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GANkC,EAMhC,CAACF,OAAD,CANgC,CAAnC;AAUA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAiC,IAAA,KAAK,EAAI;AAACG,MAAAA,OAAO,EAAG,MAAX;AAAmBC,MAAAA,UAAU,EAAG,MAAhC;AAAwCC,MAAAA,MAAM,EAAG,OAAjD;AAA0DC,MAAAA,aAAa,EAAG;AAA1E,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,WAAW,EAAG,4KAArB;AAA2D,IAAA,IAAI,EAAC,cAAhE;AAA+E,IAAA,IAAI,EAAC,MAApF;AAA2F,IAAA,KAAK,EAAEf,OAAlG;AAA2G,IAAA,QAAQ,EAAEC,eAArH;AACA,IAAA,KAAK,EAAI;AAACe,MAAAA,WAAW,EAAG,MAAf;AAAuBC,MAAAA,UAAU,EAAG,MAApC;AAA4CC,MAAAA,YAAY,EAAG;AAA3D,KADT;AAC6E,IAAA,QAAQ,MADrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAIb,iBAApD;AAAuE,IAAA,KAAK,EAAG;AAACW,MAAAA,WAAW,EAAG,MAAf;AAAuBG,MAAAA,SAAS,EAAG,MAAnC;AAA0CD,MAAAA,YAAY,EAAG;AAAzD,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ;AAOH,CA9BD;;GAAMpB,W;UAE6CJ,Q,EACFE,W,EAC5BD,W;;;KAJfG,W;AAgCNA,WAAW,CAACsB,SAAZ,GAAwB;AACpBrB,EAAAA,MAAM,EAAEb,SAAS,CAACmC,MAAV,CAAiBC;AADL,CAAxB;AAIA,eAAexB,WAAf","sourcesContent":["\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button ,message} from 'antd';\nimport Link from 'next/link';\nimport { useCallback,useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\n\nconst CommentForm = ({ postId }) => {\n\n    const [comment, onChangeComment, setComment] = useInput('');\n    const {addCommentLoading, addCommentError} = useSelector((state)=>state.post);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        if(addCommentError){\n            message.error(addCommentError);\n            setComment('');\n        }\n    },[addCommentError])\n\n    const onSubmitComment = useCallback(() => {\n        dispatch({\n            type : ADD_COMMENT_REQUEST,\n            data : {postId, comment}\n        })\n        setComment('');\n    }, [comment]);\n\n\n\n    return (\n        <Form onFinish={onSubmitComment} style = {{display : \"flex\", paddingTop : \"15px\", height : \"100px\", paddingBottom : \"15px\"}}>\n            <Input placeholder = \"댓글을 입력해주세요. 과도한 비난은 피해주시면 감사하겠습니다. \" name=\"user-comment\" type=\"text\" value={comment} onChange={onChangeComment} \n            style = {{marginRight : \"20px\", marginLeft : \"15px\", borderRadius : \"20px\"}} required />\n            <Button type=\"primary\" htmlType=\"submit\" loading = {addCommentLoading} style= {{marginRight : \"15px\", marginTop : \"20px\",borderRadius : \"20px\"}} >입력</Button>\n        </Form>\n    );\n};\n\nCommentForm.prototype = {\n    postId: PropTypes.number.isRequired\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}