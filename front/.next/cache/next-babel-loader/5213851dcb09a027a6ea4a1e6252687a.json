{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n  Posts: [{\n    id: 1,\n    title: \"JavaScript 첫번째 게시글입니다\",\n    hashTag: [\"Js\", \"JavaScript\", \"HTML\", \"Web\"],\n    content: \"첫번째 게시글!\",\n    category: \"JavaScript\",\n    createdAt: \"2017-06-13\"\n  }, {\n    id: 2,\n    title: \"React 첫번째 게시글입니다!\",\n    hashTag: [\"React\", \"ReactHooks\", \"Js\", \"JavaScript\", \"HTML\", \"Web\"],\n    content: \"두번째 게시글!\",\n    category: \"React\",\n    createdAt: \"2018-06-20\"\n  }, {\n    id: 3,\n    title: \"TypeScript 첫번째 게시글입니당\",\n    hashTag: [\"TypeScript\", \"Ts\", \"Js\", \"JavaScript\", \"HTML\", \"Web\"],\n    content: \"세번째 게시글!\",\n    category: \"TypeScript\",\n    createdAt: \"2019-04-22\"\n  }],\n  currentPost: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null\n};\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const removePost = {\n  type: REMOVE_POST_REQUEST\n};\nexport const updatePost = {\n  type: UPDATE_POST_REQUEST\n};\nexport const loadPost = data => {\n  type: LOAD_POST_REQUEST;\n};\n\nconst dummyPost = data => ({\n  id: shortId.generate(),\n  title: data.title,\n  hashTage: data.hashTag,\n  category: data.category,\n  content: data.content\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = false;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.Posts.unshift(dummyPost(action.data));\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = false;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.Posts = draft.Posts.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case UPDATE_POST_REQUEST:\n      draft.updatePostLoading = true;\n      draft.updatePostDone = false;\n      draft.updatePostError = false;\n      break;\n\n    case UPDATE_POST_SUCCESS:\n      draft.updatePostLoading = false;\n      draft.updatePostDone = true;\n      draft.Posts = draft.Posts.filter(v => v.id !== action.data);\n      break;\n\n    case UPDATE_POST_FAILURE:\n      draft.updatePostLoading = false;\n      draft.updatePostError = action.error;\n      break;\n\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = false;\n      break;\n\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.currentPost = dummyPost;\n      break;\n\n    case LOAD_POST_FAILURE:\n      draft.loadPsostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/reducers/post.js"],"names":["shortId","faker","produce","initialState","Posts","id","title","hashTag","content","category","createdAt","currentPost","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","updatePostLoading","updatePostDone","updatePostError","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","addPost","data","type","removePost","updatePost","loadPost","dummyPost","generate","hashTage","reducer","state","action","draft","unshift","error","filter","v","loadPostLoading","loadPostDone","loadPostError","loadPsostLoading"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n    Posts:\n        [\n            {\n                id: 1,\n                title: \"JavaScript 첫번째 게시글입니다\",\n                hashTag: [\"Js\", \"JavaScript\", \"HTML\", \"Web\"],\n                content: \"첫번째 게시글!\",\n                category: \"JavaScript\",\n                createdAt: \"2017-06-13\"\n            }\n            ,\n            {\n                id: 2,\n                title: \"React 첫번째 게시글입니다!\",\n                hashTag: [\"React\", \"ReactHooks\", \"Js\", \"JavaScript\", \"HTML\", \"Web\"],\n                content: \"두번째 게시글!\",\n                category: \"React\",\n                createdAt: \"2018-06-20\"\n            },\n            {\n                id: 3,\n                title: \"TypeScript 첫번째 게시글입니당\",\n                hashTag: [\"TypeScript\", \"Ts\", \"Js\", \"JavaScript\", \"HTML\", \"Web\"],\n                content: \"세번째 게시글!\",\n                category: \"TypeScript\",\n                createdAt: \"2019-04-22\"\n            }\n        ],\n    currentPost: null,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    updatePostLoading: false,\n    updatePostDone: false,\n    updatePostError: null,\n}\n\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\n\nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data,\n});\n\n\nexport const removePost = {\n    type: REMOVE_POST_REQUEST\n};\n\n\n\nexport const updatePost = {\n    type: UPDATE_POST_REQUEST\n};\n\nexport const loadPost = (data) => {\n    type: LOAD_POST_REQUEST\n};\n\nconst dummyPost = (data) => ({\n    id: shortId.generate(),\n    title : data.title,\n    hashTage : data.hashTag,\n    category : data.category,\n    content: data.content,\n});\n\n\nconst reducer = (state = initialState, action) =>\n    produce(state, (draft) => {\n        switch (action.type) {\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = false;\n                break;\n            case ADD_POST_SUCCESS:\n                draft.addPostLoading= false;\n                draft.addPostDone= true;\n                draft.Posts.unshift(dummyPost(action.data));\n                break;\n            case ADD_POST_FAILURE:\n                draft.addPostLoading= false;\n                draft.addPostError= action.error;\n                break;\n            case REMOVE_POST_REQUEST:\n                draft.removePostLoading = true;\n                draft.removePostDone = false;\n                draft.removePostError = false;\n                break;\n            case REMOVE_POST_SUCCESS:\n                draft.removePostLoading = false;\n                draft.removePostDone = true;\n                draft.Posts = draft.Posts.filter((v)=>v.id!==action.data);\n                break;\n            case REMOVE_POST_FAILURE:\n                draft.removePostLoading= false;\n                draft.removePostError= action.error;\n                break;\n\n            case UPDATE_POST_REQUEST:\n                draft.updatePostLoading = true;\n                draft.updatePostDone = false;\n                draft.updatePostError = false;\n                break;\n            case UPDATE_POST_SUCCESS:\n                draft.updatePostLoading = false;\n                draft.updatePostDone = true;\n                draft.Posts = draft.Posts.filter((v)=>v.id!==action.data);\n                break;\n            case UPDATE_POST_FAILURE:\n                draft.updatePostLoading= false;\n                draft.updatePostError= action.error;\n                break;\n            case LOAD_POST_REQUEST:\n                draft.loadPostLoading = true;\n                draft.loadPostDone = false;\n                draft.loadPostError = false;\n                break;\n            case LOAD_POST_SUCCESS:\n                draft.loadPostLoading = false;\n                draft.loadPostDone = true;\n                draft.currentPost = dummyPost;\n                break;\n            case LOAD_POST_FAILURE:\n                draft.loadPsostLoading= false;\n                draft.loadPostError= action.error;\n                break;\n            default:\n                break;\n        }\n    });\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}