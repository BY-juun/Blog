{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/pages/UpdatePost/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppLayout from \"../../components/AppLayout\";\nimport Head from 'next/head';\nimport Router, { useRouter } from 'next/router';\nimport WritePostForm from '../../components/WritePostForm';\nimport { useSelector } from 'react-redux';\n\nvar UpdatePost = function UpdatePost() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    if (me.email !== \"neostgeart@gmail.com\") {\n      alert(\"글 수정 권한이 없습니다\");\n      Router.replace('/');\n    }\n  }, [me]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"\\uAE00\\uC218\\uC815\\uD558\\uAE30\")), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(WritePostForm, {\n    id: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(UpdatePost, \"7BEbrkI844UqKlxIBtdvsH4Rhc8=\", false, function () {\n  return [useSelector, useRouter];\n});\n\n_c = UpdatePost;\nexport var __N_SSP = true;\nexport default UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/UpdatePost/[id].js"],"names":["React","useEffect","AppLayout","Head","Router","useRouter","WritePostForm","useSelector","UpdatePost","state","user","me","router","id","query","email","alert","replace"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAQC,MAAR,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAMA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,UAAU,GAAE,SAAZA,UAAY,GAAM;AAAA;;AACpB,qBAAaD,WAAW,CAAC,UAACE,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAAxB;AAAA,MAAOC,EAAP,gBAAOA,EAAP;;AACA,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAQQ,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;AACAZ,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGU,EAAE,CAACI,KAAH,KAAa,sBAAhB,EACA;AACIC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACAZ,MAAAA,MAAM,CAACa,OAAP,CAAe,GAAf;AACH;AACJ,GANQ,EAMP,CAACN,EAAD,CANO,CAAT;AAQA,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,EAAE,EAAIE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ;AAUH,CAtBD;;GAAML,U;UACWD,W,EACEF,S;;;KAFbG,U;;AAsCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport AppLayout from \"../../components/AppLayout\";\nimport Head from 'next/head';\nimport  Router, {useRouter } from 'next/router';\nimport WritePostForm from '../../components/WritePostForm';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user'\n\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport { useSelector } from 'react-redux';\n\nconst UpdatePost= () => {\n    const {me} = useSelector((state)=>state.user);\n    const router = useRouter();\n    const { id } = router.query;\n    useEffect(()=>{\n        if(me.email !== \"neostgeart@gmail.com\")\n        {\n            alert(\"글 수정 권한이 없습니다\");\n            Router.replace('/');\n        }\n    },[me])\n\n    return (\n        <>\n            <Head>\n                <title>글수정하기</title>\n            </Head>\n            <AppLayout>\n                <WritePostForm id = {id}/>\n            </AppLayout>\n        </>\n    );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n\nexport default UpdatePost;"]},"metadata":{},"sourceType":"module"}