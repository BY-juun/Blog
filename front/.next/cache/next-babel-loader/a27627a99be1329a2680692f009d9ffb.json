{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/pages/category/[category].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport PostCard from '../../components/PostCard';\nimport { Pagination } from 'antd';\n\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\nvar category = function category() {\n  _s();\n\n  var _useState = useState(1),\n      current = _useState[0],\n      setCurrent = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      Posts = _useSelector.Posts;\n\n  var startIndex = 0;\n  var lastIndex = 5;\n  var showPosts = Posts.slice(startIndex, lastIndex);\n  var router = useRouter();\n  var category = router.query.category;\n  var onChange = useCallback(function (page) {\n    setCurrent(page);\n    startIndex = (page - 1) * 5;\n    lastIndex = startIndex + 5;\n    showPosts = Posts.slice(startIndex, lastIndex);\n  }, [current]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, category)), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, showPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      style: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    });\n  }), __jsx(Pagination, {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    current: current,\n    onChange: onChange,\n    total: Posts.length * 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(category, \"znwIru+kcRHVf7EuU+VUfyZLDKQ=\", false, function () {\n  return [useSelector, useRouter];\n});\n\nexport var __N_SSP = true;\nexport default category;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/category/[category].js"],"names":["AppLayout","useRouter","useDispatch","useSelector","React","useCallback","useState","Head","PostCard","Pagination","category","current","setCurrent","state","post","Posts","startIndex","lastIndex","showPosts","slice","router","query","onChange","page","map","id","textAlign","marginTop","length"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,SAASC,UAAT,QAA2B,MAA3B;;AAMA;AACA;AACA,IAAMC,QAAQ,GAAG,oBAAM;AAAA;;AACnB,kBAA6BJ,QAAQ,CAAC,CAAD,CAArC;AAAA,MAAOK,OAAP;AAAA,MAAeC,UAAf;;AACA,qBAAgBT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAUA,KAAK,CAACC,IAAhB;AAAA,GAAD,CAA3B;AAAA,MAAOC,KAAP,gBAAOA,KAAP;;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,SAAS,GAAGH,KAAK,CAACI,KAAN,CAAYH,UAAZ,EAAuBC,SAAvB,CAAhB;AACA,MAAMG,MAAM,GAAGnB,SAAS,EAAxB;AACA,MAAQS,QAAR,GAAqBU,MAAM,CAACC,KAA5B,CAAQX,QAAR;AACA,MAAMY,QAAQ,GAAGjB,WAAW,CAAC,UAAAkB,IAAI,EAAI;AACjCX,IAAAA,UAAU,CAACW,IAAD,CAAV;AACAP,IAAAA,UAAU,GAAG,CAACO,IAAI,GAAC,CAAN,IAAW,CAAxB;AACAN,IAAAA,SAAS,GAAGD,UAAU,GAAG,CAAzB;AACAE,IAAAA,SAAS,GAAGH,KAAK,CAACI,KAAN,CAAYH,UAAZ,EAAuBC,SAAvB,CAAZ;AACH,GAL2B,EAK1B,CAACN,OAAD,CAL0B,CAA5B;AAQA,SAEI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,QAAR,CADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,SAAS,CAACM,GAAV,CAAc,UAACV,IAAD;AAAA,WAAS,MAAC,QAAD;AAAW,MAAA,GAAG,EAAIA,IAAI,CAACW,EAAvB;AAA2B,MAAA,IAAI,EAAIX,IAAnC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AAAA,GAAd,CADL,EAEI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAI;AAACY,MAAAA,SAAS,EAAG,QAAb;AAAuBC,MAAAA,SAAS,EAAG;AAAnC,KAArB;AAAiE,IAAA,OAAO,EAAEhB,OAA1E;AAAmF,IAAA,QAAQ,EAAEW,QAA7F;AAAuG,IAAA,KAAK,EAAEP,KAAK,CAACa,MAAN,GAAa,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,CAFJ;AAYH,CA5BD;;GAAMlB,Q;UAEcP,W,EAIDF,S;;;;AA2CnB,eAAeS,QAAf","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport PostCard from '../../components/PostCard';\nimport {LOAD_CATEGORYPOSTS_REQUEST} from '../../reducers/post'\nimport { Pagination } from 'antd';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user'\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\n\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\nconst category = () => {\n    const [current,setCurrent] = useState(1);\n    const {Posts} = useSelector((state)=>(state.post));\n    let startIndex = 0 \n    let lastIndex = 5;\n    let showPosts = Posts.slice(startIndex,lastIndex);\n    const router = useRouter();\n    const { category } = router.query;\n    const onChange = useCallback(page => {\n        setCurrent(page);\n        startIndex = (page-1) * 5;\n        lastIndex = startIndex + 5;\n        showPosts = Posts.slice(startIndex,lastIndex);\n    },[current]);\n    \n\n    return (\n\n        <>\n            <Head>\n                <title>{category}</title>\n            </Head>\n            <AppLayout>\n                {showPosts.map((post)=> <PostCard  key = {post.id} post = {post} style/>)}\n                <Pagination style = {{textAlign : \"center\", marginTop : \"20px\"}} current={current} onChange={onChange} total={Posts.length*2} />\n            </AppLayout>\n        </> \n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch({\n        type : LOAD_CATEGORYPOSTS_REQUEST,\n        data: context.params.category,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n  \n\nexport default category;"]},"metadata":{},"sourceType":"module"}