{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { loadPost } from \"../reducers/post\"; //전체 post 를 가져와서 띄어주는 글 (최신순으로)\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var hashTag = post.hashTag,\n      category = post.category;\n  var dispatch = useDispatch();\n\n  var loadPosts = function loadPosts() {\n    console.log(\"loadPosts\");\n    dispatch(loadPost(post.id));\n  };\n\n  var hashTagArr = [];\n  hashTag.split(/(#[^\\s#]+)/g).map(function (v) {\n    hashTagArr.push(v);\n  });\n  return __jsx(Card, {\n    title: post.title,\n    extra: __jsx(\"a\", {\n      href: \"/post/1\",\n      onClick: loadPosts,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 42\n      }\n    }, \"More\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, category && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }\n  }, \"Category : \", __jsx(\"a\", {\n    href: \"post/\".concat(category),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 42\n    }\n  }, category)), hashTagARR && hashTagARR.map(function (value, index) {\n    return __jsx(\"p\", {\n      style: {\n        display: \"inline\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 60\n      }\n    }, \"  \", __jsx(\"p\", {\n      style: {\n        display: \"inline\",\n        color: \"blue\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 96\n      }\n    }, \" #\"), \" \", value, \"   \");\n  }));\n};\n\n_s(PostCard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/components/PostCard.js"],"names":["Card","useDispatch","loadPost","PostCard","post","hashTag","category","dispatch","loadPosts","console","log","id","hashTagArr","split","map","v","push","title","hashTagARR","value","index","display","color"],"mappings":";;;;;;AAAA,SAAQA,IAAR,QAAmB,MAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC3B,MAAOC,OAAP,GAA2BD,IAA3B,CAAOC,OAAP;AAAA,MAAeC,QAAf,GAA2BF,IAA3B,CAAeE,QAAf;AACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,MAAMO,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAH,IAAAA,QAAQ,CAACL,QAAQ,CAACE,IAAI,CAACO,EAAN,CAAT,CAAR;AACH,GAHD;;AAIA,MAAMC,UAAU,GAAG,EAAnB;AACAP,EAAAA,OAAO,CAACQ,KAAR,CAAc,aAAd,EAA6BC,GAA7B,CAAiC,UAACC,CAAD,EAAO;AAACH,IAAAA,UAAU,CAACI,IAAX,CAAgBD,CAAhB;AAAmB,GAA5D;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,IAAI,CAACa,KAAlB;AAA0B,IAAA,KAAK,EAAE;AAAG,MAAA,IAAI,WAAP;AAAoB,MAAA,OAAO,EAAIT,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAG,IAAA,IAAI,iBAAYA,QAAZ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,QAAhC,CAAhB,CADjB,EAEKY,UAAU,IAAIA,UAAU,CAACJ,GAAX,CAAe,UAACK,KAAD,EAAOC,KAAP;AAAA,WAAiB;AAAG,MAAA,KAAK,EAAI;AAACC,QAAAA,OAAO,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAG,MAAA,KAAK,EAAI;AAACA,QAAAA,OAAO,EAAG,QAAX;AAAqBC,QAAAA,KAAK,EAAG;AAA7B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApC,OAA8FH,KAA9F,QAAjB;AAAA,GAAf,CAFnB,CADJ;AAMH,CAfD;;GAAMhB,Q;UAEeF,W;;;KAFfE,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import {Card} from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { loadPost } from \"../reducers/post\";\n\n//전체 post 를 가져와서 띄어주는 글 (최신순으로)\nconst PostCard = ({ post }) => {\n    const {hashTag,category} = post;\n    const dispatch = useDispatch();\n    const loadPosts = () => {\n        console.log(\"loadPosts\");\n        dispatch(loadPost(post.id));\n    }\n    const hashTagArr = []\n    hashTag.split(/(#[^\\s#]+)/g).map((v) => {hashTagArr.push(v)});\n    return (\n        <Card title={post.title}  extra={<a href={`/post/1`} onClick = {loadPosts}>More</a>} >\n            {category && <div>Category : <a href = {`post/${category}`}>{category}</a></div> } \n            {hashTagARR && hashTagARR.map((value,index) => <p style = {{display : \"inline\"}}>  <p style = {{display : \"inline\" ,color : \"blue\"}}> #</p> {value}   </p>)}\n        </Card>\n    );\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}