{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport Head from 'next/head';\nimport { Form, Input, Button, message } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CHANGE_NICKNAME_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios';\n\nconst changeNickname = () => {\n  const dispatch = useDispatch();\n  const {\n    changeNicknameLoading,\n    me,\n    changeNicknameDone,\n    changeNicknameError\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (!me) {\n      message.error(\"로그인 해야 합니다\");\n      Router.replace('/');\n    }\n\n    if (changeNicknameDone) {\n      Router.replace('/');\n    }\n\n    if (changeNicknameError) {\n      message.error(changeNicknameError);\n      setNickname('');\n    }\n  }, [changeNicknameDone, changeNicknameError, me]);\n  const [nickname, onChangeNickname, setNickname] = useInput('');\n  const onSubmitNickname = useCallback(() => {\n    console.log(nickname);\n    dispatch({\n      type: CHANGE_NICKNAME_REQUEST,\n      data: nickname\n    });\n  }, [nickname]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uB2C9\\uB124\\uC784 \\uC218\\uC815\")), __jsx(AppLayout, null, __jsx(Form, {\n    onFinish: onSubmitNickname,\n    style: {\n      textAlign: \"center\",\n      marginTop: \"25px\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"inline-block\"\n    }\n  }, __jsx(Input, {\n    name: \"user-nick\",\n    placeholder: \"nickname\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: changeNicknameLoading\n  }, \"\\uBCC0\\uACBD\"))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default changeNickname;","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/changeNickname.js"],"names":["React","useCallback","useEffect","AppLayout","Head","Form","Input","Button","message","useInput","LOAD_MY_INFO_REQUEST","useDispatch","useSelector","CHANGE_NICKNAME_REQUEST","Router","wrapper","END","axios","changeNickname","dispatch","changeNicknameLoading","me","changeNicknameDone","changeNicknameError","state","user","error","replace","setNickname","nickname","onChangeNickname","onSubmitNickname","console","log","type","data","textAlign","marginTop","display","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport Head from 'next/head';\nimport { Form, Input, Button,message } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CHANGE_NICKNAME_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\n\nconst changeNickname = () => {\n\n    const dispatch = useDispatch();\n\n    const {changeNicknameLoading, me,changeNicknameDone, changeNicknameError} = useSelector((state)=>state.user);\n    \n    useEffect(()=>{\n        if(!me){\n            message.error(\"로그인 해야 합니다\");\n            Router.replace('/');\n        }\n        if(changeNicknameDone)\n        {\n            Router.replace('/');\n        }\n        if(changeNicknameError)\n        {\n            message.error(changeNicknameError);\n            setNickname('');\n        }\n    },[changeNicknameDone,changeNicknameError,me])\n\n\n    const [nickname, onChangeNickname, setNickname] = useInput('');\n\n    const onSubmitNickname = useCallback(() => {\n        console.log(nickname);\n        dispatch({\n            type : CHANGE_NICKNAME_REQUEST,\n            data : nickname,\n        })\n    },[nickname]);\n\n    \n    return (\n        <>\n            <Head>\n                <title>닉네임 수정</title>\n            </Head>\n            <AppLayout>\n                <Form onFinish = {onSubmitNickname} style = {{textAlign : \"center\", marginTop : \"25px\"}}>\n                    <div style = {{display : \"inline-block\"}}>\n                        <Input name=\"user-nick\" placeholder = \"nickname\" value={nickname} required onChange={onChangeNickname}/>\n                    </div>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={changeNicknameLoading}>변경</Button>\n                </Form>\n            </AppLayout>\n        </>\n    );\n}\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n\nexport default changeNickname;"]},"metadata":{},"sourceType":"module"}