{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/byeongjun/My blog/front/pages/post/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { FormOutlined } from '@ant-design/icons';\nimport { LOAD_CURPOST_REQUEST } from \"../../reducers/post\";\nimport ReactHtmlParser from 'html-react-parser';\nimport { PageHeader, Tag, Comment, Avatar, Button } from 'antd';\nimport CommentForm from '../../components/CommentForm';\nimport moment from 'moment'; //More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nmoment.locale(\"ko\");\n\nvar Post = function Post() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      currentPost = _useSelector.currentPost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  useEffect(function () {\n    console.log(id);\n\n    if (id) {\n      dispatch({\n        type: LOAD_CURPOST_REQUEST,\n        data: id\n      });\n    }\n  }, [id]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, me && me.nickname === \"By_juun\" && __jsx(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginTop: \"15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, me && me.email === \"neostgeart@gmail.com\" && __jsx(Button, {\n    style: {\n      backgroundColor: \"lightblue\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 67\n    }\n  }, \"\\uAE00 \\uC218\\uC815\"), me && me.email === \"neostgeart@gmail.com\" && __jsx(Button, {\n    style: {\n      backgroundColor: \"palevioletred\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 67\n    }\n  }, \"\\uAE00 \\uC0AD\\uC81C\")), currentPost && __jsx(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginRight: \"10px\",\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, moment(currentPost.createdAt).format('L')), currentPost && __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"30px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, currentPost.title), currentPost && __jsx(PageHeader, {\n    className: \"site-page-header\",\n    tags: __jsx(Tag, {\n      color: \"blue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, currentPost.category),\n    subTitle: currentPost.hashTag,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\",\n      marginRight: \"15px\",\n      minHeight: \"700px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, currentPost && ReactHtmlParser(currentPost.content)), me ? __jsx(CommentForm, {\n    postId: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }) : __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"15px\",\n      marginBottom: \"15px\",\n      fontSize: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 50\n    }\n  }, __jsx(FormOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 149\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 165\n    }\n  }, \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778 \\uD574\\uC8FC\\uC138\\uC694\")), __jsx(\"div\", {\n    style: {\n      borderTop: \"0.5px solid lightgray\",\n      marginTop: \"10px\",\n      marginRight: \"15px\",\n      marginLeft: \"15px\",\n      marginBottom: \"15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, currentPost && currentPost.Comments && currentPost.Comments.map(function (commentInfo) {\n    return __jsx(Comment, {\n      key: commentInfo.id,\n      datetime: moment(commentInfo.createdAt, \"YYYYMMDD\").format('L'),\n      author: commentInfo.User.nickname,\n      content: commentInfo.content,\n      avatar: __jsx(Avatar, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }\n      }, commentInfo.User.nickname[0]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 55\n      }\n    });\n  })));\n};\n\n_s(Post, \"fPDMTq6NrTB6J+QERdy0ZxgvIKo=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/byeongjun/My blog/front/pages/post/[id].js"],"names":["AppLayout","useRouter","useDispatch","useSelector","useEffect","FormOutlined","LOAD_CURPOST_REQUEST","ReactHtmlParser","PageHeader","Tag","Comment","Avatar","Button","CommentForm","moment","locale","Post","dispatch","router","id","query","state","post","currentPost","user","me","console","log","type","data","nickname","textAlign","marginTop","email","backgroundColor","marginRight","createdAt","format","title","category","hashTag","marginLeft","minHeight","content","marginBottom","fontSize","borderTop","Comments","map","commentInfo","User"],"mappings":"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","sourcesContent":["import AppLayout from \"../../components/AppLayout\";\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from \"react\";\nimport {FormOutlined} from '@ant-design/icons'\nimport { LOAD_CURPOST_REQUEST } from \"../../reducers/post\";\nimport ReactHtmlParser from 'html-react-parser'\nimport { PageHeader, Tag, Comment, Avatar, Button} from 'antd';\nimport CommentForm from '../../components/CommentForm';\nimport wrapper from \"../../store/configureStore\";\nimport { END } from 'redux-saga';\nimport axios from 'axios'\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user'\nimport moment from 'moment';\n//More button을 누르면, 해당 글의 id를 가지고 Post Component로 온다\n//그렇다면 나는 서버로 해당 id에 해당하는 글을 가지고 와서 이를 보여주면댐.\n\nmoment.locale(\"ko\");\nconst Post = () => {\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const { id } = router.query;\n    const { currentPost } = useSelector((state) => state.post);\n    const {me} = useSelector((state)=>state.user);\n    useEffect(()=>{\n        console.log(id);\n        if(id){\n            dispatch({\n                type : LOAD_CURPOST_REQUEST,\n                data : id,\n            })\n        }\n        \n    },[id])\n\n    return (\n        <AppLayout>\n            {me && me.nickname === \"By_juun\" &&\n                <div style = {{textAlign : \"right\" , marginTop : \"15px\"}}>\n                    {me && me.email === \"neostgeart@gmail.com\" && <Button style = {{backgroundColor : \"lightblue\"}}>글 수정</Button>}\n                    {me && me.email === \"neostgeart@gmail.com\" && <Button style = {{backgroundColor : \"palevioletred\"}}>글 삭제</Button>}\n                </div>\n            }\n            \n            {currentPost && <div style = {{textAlign : \"right\", marginRight : \"10px\", marginTop : \"20px\"}}>{moment(currentPost.createdAt).format('L')}</div>}\n            {currentPost && <h1 style = {{textAlign : \"center\", marginTop : \"30px\"}}>{currentPost.title}</h1>}\n            {currentPost && <PageHeader\n            className=\"site-page-header\"\n            tags = {<Tag color = \"blue\">{currentPost.category}</Tag>}\n            subTitle={currentPost.hashTag}\n            />}\n            <div style = {{marginLeft : \"15px\",marginRight : \"15px\",minHeight : \"700px\"}}>{currentPost && ReactHtmlParser(currentPost.content)}</div>\n            {me ? <CommentForm postId = {id}/> : <div style = {{textAlign : \"center\", marginTop : \"15px\",marginBottom : \"15px\", fontSize : \"20px\"}}><FormOutlined /><div>댓글을 작성하려면 로그인 해주세요</div></div>}\n            <div style = {{borderTop : \"0.5px solid lightgray\" , marginTop : \"10px\", marginRight : \"15px\", marginLeft : \"15px\", marginBottom : \"15px\"}}>\n            {currentPost && currentPost.Comments \n            &&\n            currentPost.Comments.map((commentInfo) => <Comment key = {commentInfo.id}  \n             datetime = {moment(commentInfo.createdAt,\"YYYYMMDD\").format('L')}\n             author = {commentInfo.User.nickname} \n             content = {commentInfo.content} \n             avatar = {\n                 <Avatar>{commentInfo.User.nickname[0]}</Avatar>\n             }>\n             </Comment> )\n            }\n            </div>\n        </AppLayout>\n    )\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    //원래 브라우저에서 cookie를 알아서 넣어주는데 , SSR시에는 브라우저 개입을 못하니까 프론트서버에서 헤더에 쿠키를 넣어서 보내줘야 한다.\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  });\n  \n\nexport default Post;"]},"metadata":{},"sourceType":"module"}